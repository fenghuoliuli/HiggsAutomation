2016-11-12 22:03:50,080 [main] INFO  Question:44 - *****************Test case: Get Question List Started*****************
2016-11-12 22:03:50,131 [main] INFO  Question:56 - *****************Test case: Get Question List Ended*****************
2016-11-12 22:03:50,136 [main] INFO  Question:65 - *****************Test case: Post Question add Started*****************
2016-11-12 22:03:50,156 [main] INFO  Question:79 - Post request body is:{
  "type": 1,
  "description": "Test from zhao",
  "options": "",
  "title": "Zhao testing",
  "required": 0,
  "createdBy": 3,
  "updatedBy": 3,
  "createdAt": "2016-11-10T02:40:34.865Z",
  "updatedAt": "2016-11-10T02:40:34.865Z",
  "referType": 1,
  "deleted": 0
}
2016-11-12 22:03:50,213 [main] INFO  Question:81 - Post Question Add's response body is: com.inmind.http.APIResponse@3b9d6699
2016-11-12 22:03:50,299 [main] INFO  Question:104 - *****************Test case: Post Question add Ended*****************
2016-11-12 22:03:50,303 [main] INFO  Question:112 - *****************Test case: Post Question Delete Started*****************
2016-11-12 22:03:50,328 [main] INFO  Question:118 - Deleting the record which id=123 in the DB
2016-11-12 22:03:50,365 [main] INFO  Question:123 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:03:50,539 [main] INFO  Question:133 - The reponse body is: {
  "_body" : [ {
    "createdAt" : 1478959430000,
    "deleted" : 0,
    "updatedBy" : 0,
    "createdBy" : 0,
    "options" : "",
    "referType" : 0,
    "description" : "",
    "id" : 123,
    "title" : "zhao test",
    "type" : 0,
    "required" : 0,
    "updatedAt" : 1478959430000
  } ],
  "_status" : 200,
  "_msg" : ""
}
2016-11-12 22:03:50,540 [main] INFO  Question:140 - *****************Test case: Post Question Delete Ended*****************
2016-11-12 22:03:50,543 [main] INFO  Question:149 - *****************Test case: Post Question Update Started*****************
2016-11-12 22:03:50,675 [main] INFO  Question:155 - Deleting the record which id=123 in the DB
2016-11-12 22:03:50,985 [main] INFO  Question:159 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:03:51,033 [main] INFO  Question:174 - *****************Test case: Post Question Update Ended*****************
2016-11-12 22:41:35,186 [main] INFO  Question:253 - *****************Test suit: Question*****************
2016-11-12 22:41:35,960 [main] INFO  Question:44 - *****************Test case: Get Question List Started*****************
2016-11-12 22:41:35,997 [main] INFO  Question:56 - *****************Test case: Get Question List Ended*****************
2016-11-12 22:41:36,000 [main] INFO  Question:200 - *****************Test case: Get Question by task code Started*****************
2016-11-12 22:41:36,041 [main] INFO  Question:212 - *****************Test case: Get Question By Task Code Ended*****************
2016-11-12 22:41:36,044 [main] INFO  Question:83 - *****************Test case: Post Question add Started*****************
2016-11-12 22:41:36,068 [main] INFO  Question:97 - Post request body is:{
  "type": 1,
  "description": "Test from zhao",
  "options": "",
  "title": "Zhao testing",
  "required": 0,
  "createdBy": 3,
  "updatedBy": 3,
  "createdAt": "2016-11-10T02:40:34.865Z",
  "updatedAt": "2016-11-10T02:40:34.865Z",
  "referType": 1,
  "deleted": 0
}
2016-11-12 22:41:36,120 [main] INFO  Question:99 - Post Question Add's response body is: com.inmind.http.APIResponse@7bf9b098
2016-11-12 22:41:36,195 [main] INFO  Question:122 - *****************Test case: Post Question add Ended*****************
2016-11-12 22:41:36,199 [main] INFO  Question:130 - *****************Test case: Post Question Delete Started*****************
2016-11-12 22:41:36,215 [main] INFO  Question:136 - Deleting the record which id=123 in the DB
2016-11-12 22:41:36,244 [main] INFO  Question:141 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:41:36,369 [main] INFO  Question:151 - The reponse body is: {
  "_body" : [ {
    "createdAt" : 1478961696000,
    "deleted" : 0,
    "updatedBy" : 0,
    "createdBy" : 0,
    "options" : "",
    "referType" : 0,
    "description" : "",
    "id" : 123,
    "title" : "zhao test",
    "type" : 0,
    "required" : 0,
    "updatedAt" : 1478961696000
  } ],
  "_status" : 200,
  "_msg" : ""
}
2016-11-12 22:41:36,370 [main] INFO  Question:158 - *****************Test case: Post Question Delete Ended*****************
2016-11-12 22:41:36,372 [main] INFO  Question:168 - *****************Test case: Post Question Update Started*****************
2016-11-12 22:41:36,385 [main] INFO  Question:174 - Deleting the record which id=123 in the DB
2016-11-12 22:41:36,418 [main] INFO  Question:178 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:41:36,449 [main] INFO  Question:193 - *****************Test case: Post Question Update Ended*****************
2016-11-12 22:45:17,180 [main] INFO  Question:255 - *****************Test suit: Question*****************
2016-11-12 22:45:18,539 [main] INFO  Question:65 - *****************Test case: Get Question List with Wrong Auth Started*****************
2016-11-12 22:45:18,589 [main] INFO  Question:77 - *****************Test case: Get Question with Wrong Auth List Ended*****************
2016-11-12 22:45:18,594 [main] INFO  Question:44 - *****************Test case: Get Question List Started*****************
2016-11-12 22:45:18,637 [main] INFO  Question:56 - *****************Test case: Get Question List Ended*****************
2016-11-12 22:45:18,640 [main] INFO  Question:202 - *****************Test case: Get Question by task code Started*****************
2016-11-12 22:45:18,690 [main] INFO  Question:214 - *****************Test case: Get Question By Task Code Ended*****************
2016-11-12 22:45:18,693 [main] INFO  Question:85 - *****************Test case: Post Question add Started*****************
2016-11-12 22:45:18,764 [main] INFO  Question:99 - Post request body is:{
  "type": 1,
  "description": "Test from zhao",
  "options": "",
  "title": "Zhao testing",
  "required": 0,
  "createdBy": 3,
  "updatedBy": 3,
  "createdAt": "2016-11-10T02:40:34.865Z",
  "updatedAt": "2016-11-10T02:40:34.865Z",
  "referType": 1,
  "deleted": 0
}
2016-11-12 22:45:18,813 [main] INFO  Question:101 - Post Question Add's response body is: com.inmind.http.APIResponse@5b800468
2016-11-12 22:45:18,919 [main] INFO  Question:124 - *****************Test case: Post Question add Ended*****************
2016-11-12 22:45:18,922 [main] INFO  Question:132 - *****************Test case: Post Question Delete Started*****************
2016-11-12 22:45:18,956 [main] INFO  Question:138 - Deleting the record which id=123 in the DB
2016-11-12 22:45:19,012 [main] INFO  Question:143 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:45:19,236 [main] INFO  Question:153 - The reponse body is: {
  "_body" : [ {
    "createdAt" : 1478961918000,
    "deleted" : 0,
    "updatedBy" : 0,
    "createdBy" : 0,
    "options" : "",
    "referType" : 0,
    "description" : "",
    "id" : 123,
    "title" : "zhao test",
    "type" : 0,
    "required" : 0,
    "updatedAt" : 1478961918000
  } ],
  "_status" : 200,
  "_msg" : ""
}
2016-11-12 22:45:19,238 [main] INFO  Question:160 - *****************Test case: Post Question Delete Ended*****************
2016-11-12 22:45:19,240 [main] INFO  Question:170 - *****************Test case: Post Question Update Started*****************
2016-11-12 22:45:19,271 [main] INFO  Question:176 - Deleting the record which id=123 in the DB
2016-11-12 22:45:19,311 [main] INFO  Question:180 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-12 22:45:19,342 [main] INFO  Question:195 - *****************Test case: Post Question Update Ended*****************
2016-11-13 10:36:13,952 [main] INFO  Question:255 - *****************Test suit: Question*****************
2016-11-13 10:41:38,109:255 - *****************Test suit: Question*****************
2016-11-13 10:41:38,871:65 - *****************Test case: Get Question List with Wrong Auth Started*****************
2016-11-13 10:41:38,911:77 - *****************Test case: Get Question with Wrong Auth List Ended*****************
2016-11-13 10:41:38,914:44 - *****************Test case: Get Question List Started*****************
2016-11-13 10:41:38,953:56 - *****************Test case: Get Question List Ended*****************
2016-11-13 10:41:38,956:202 - *****************Test case: Get Question by task code Started*****************
2016-11-13 10:41:38,994:214 - *****************Test case: Get Question By Task Code Ended*****************
2016-11-13 10:41:38,997:85 - *****************Test case: Post Question add Started*****************
2016-11-13 10:41:39,015:99 - Post request body is:{
  "type": 1,
  "description": "Test from zhao",
  "options": "",
  "title": "Zhao testing",
  "required": 0,
  "createdBy": 3,
  "updatedBy": 3,
  "createdAt": "2016-11-10T02:40:34.865Z",
  "updatedAt": "2016-11-10T02:40:34.865Z",
  "referType": 1,
  "deleted": 0
}
2016-11-13 10:41:39,064:101 - Post Question Add's response body is: com.inmind.http.APIResponse@64da2a7
2016-11-13 10:41:39,133:124 - *****************Test case: Post Question add Ended*****************
2016-11-13 10:41:39,138:132 - *****************Test case: Post Question Delete Started*****************
2016-11-13 10:41:39,169:138 - Deleting the record which id=123 in the DB
2016-11-13 10:41:39,200:143 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-13 10:41:39,349:153 - The reponse body is: {
  "_body" : [ {
    "createdAt" : 1479004899000,
    "deleted" : 0,
    "updatedBy" : 0,
    "createdBy" : 0,
    "options" : "",
    "referType" : 0,
    "description" : "",
    "id" : 123,
    "title" : "zhao test",
    "type" : 0,
    "required" : 0,
    "updatedAt" : 1479004899000
  } ],
  "_status" : 200,
  "_msg" : ""
}
2016-11-13 10:41:39,350:160 - *****************Test case: Post Question Delete Ended*****************
2016-11-13 10:41:39,352:170 - *****************Test case: Post Question Update Started*****************
2016-11-13 10:41:39,367:176 - Deleting the record which id=123 in the DB
2016-11-13 10:41:39,393:180 - Executing the sql statement:INSERT INTO automind_test.question(id, title, refer_type, `type`, required, `options`, description, deleted, created_by, updated_by, created_at, updated_at)VALUES(123, 'zhao test', 0, 0, 0, '', '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-13 10:41:39,442:195 - *****************Test case: Post Question Update Ended*****************
2016-11-14 14:08:37,633:98 - *****************Test suit: Question*****************
2016-11-14 14:08:38,704:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:08:38,715:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:08:38,752:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:08:38,772:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:08:38,773:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:08:38,812:61 - Sending Get request
2016-11-14 14:08:38,855:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:12:23,575:98 - *****************Test suit: Question*****************
2016-11-14 14:12:24,446:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:12:24,456:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:12:24,496:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:12:24,496:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:12:24,550:61 - Sending Get request
2016-11-14 14:12:24,585:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:25:59,440:98 - *****************Test suit: Question*****************
2016-11-14 14:26:00,336:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:26:00,349:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:26:00,402:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:26:00,402:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:26:00,465:61 - Sending Get request
2016-11-14 14:26:00,514:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:27:36,989:98 - *****************Test suit: Question*****************
2016-11-14 14:27:38,170:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:27:38,283:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:27:38,383:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:27:38,383:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:27:38,569:61 - Sending Get request
2016-11-14 14:27:38,609:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:29:35,686:98 - *****************Test suit: Question*****************
2016-11-14 14:29:36,924:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:29:36,978:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:29:37,095:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:29:37,095:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:29:37,302:61 - Sending Get request
2016-11-14 14:29:37,381:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:41:14,260:98 - *****************Test suit: Question*****************
2016-11-14 14:41:20,212:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:41:20,240:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:41:20,288:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:41:20,289:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:41:20,357:61 - Sending Get request
2016-11-14 14:41:20,361:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:46:54,775:98 - *****************Test suit: Question*****************
2016-11-14 14:46:55,821:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:46:55,849:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:46:55,880:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:46:55,880:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:46:55,972:61 - Sending Get request
2016-11-14 14:46:56,039:73 - *****************Test case: Get Project getOne Ended*****************
2016-11-14 14:48:46,472:98 - *****************Test suit: Question*****************
2016-11-14 14:48:47,349:34 - *****************Test case: Get Project getOne Started*****************
2016-11-14 14:48:47,370:40 - Deleting exsiting Zhao API Testing record in the DB
2016-11-14 14:48:47,419:44 - Insert the Zhao API Testing record to the DB
2016-11-14 14:48:47,420:46 - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2016-11-14 14:48:47,512:61 - Sending Get request
2016-11-14 14:48:47,584:73 - *****************Test case: Get Project getOne Ended*****************
[15:03:41:251] [INFO] - com.inmind.restful.testcases.Project.setup(Project.java:119) - *****************Test suit: Question*****************
[15:03:42:499] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:34) - *****************Test case: Get Project getOne Started*****************
[15:03:42:512] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:40) - Deleting exsiting Zhao API Testing record in the DB
[15:03:42:537] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:44) - Insert the Zhao API Testing record to the DB
[15:03:42:537] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:46) - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
[15:03:42:584] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:61) - Sending Get request
[15:03:42:626] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:73) - *****************Test case: Get Project getOne Ended*****************
[15:03:42:630] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:79) - *****************Test case: Get Project getOne with invalid id Started*****************
[15:03:42:630] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:85) - Sending Get request
[15:03:42:664] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:94) - *****************Test case: Get Project getOne with invalid id Ended*****************
[15:05:03:627] [INFO] - com.inmind.restful.testcases.Project.setup(Project.java:137) - *****************Test suit: Question*****************
[15:05:04:490] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:34) - *****************Test case: Get Project getOne Started*****************
[15:05:04:502] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:40) - Deleting exsiting Zhao API Testing record in the DB
[15:05:04:550] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:44) - Insert the Zhao API Testing record to the DB
[15:05:04:551] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:46) - Executing the sql statement:INSERT INTO automind_test.project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
[15:05:04:611] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:61) - Sending Get request
[15:05:04:652] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne(Project.java:73) - *****************Test case: Get Project getOne Ended*****************
[15:05:04:655] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_Auth(Project.java:100) - *****************Test case: Get Project getOne with invalid Auth Started*****************
[15:05:04:656] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_Auth(Project.java:104) - Sending Get request
[15:05:04:685] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_Auth(Project.java:113) - *****************Test case: Get Project getOne with invalid Auth Ended*****************
[15:05:04:690] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:79) - *****************Test case: Get Project getOne with invalid id Started*****************
[15:05:04:691] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:85) - Sending Get request
[15:05:04:719] [INFO] - com.inmind.restful.testcases.Project.Get_Project_getOne_with_invalid_id(Project.java:94) - *****************Test case: Get Project getOne with invalid id Ended*****************
[16:47:02:581] [INFO] - com.inmind.restful.testcases.Task.setup(Task.java:80) - *****************Test suit: Task*****************
[16:47:03:473] [INFO] - com.inmind.restful.testcases.Task.Get_Task_GetOne(Task.java:38) - *****************Test case: Get Task GetOne Started*****************
[16:47:03:520] [INFO] - com.inmind.restful.testcases.Task.Get_Task_GetOne(Task.java:50) - *****************Test case: Get Question Task GetOne Ended*****************
2017-08-04 17:08:29 [main] INFO  Org:2379 - *****************Test suit: Org*****************
2017-08-04 17:08:29 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-08-04 17:08:29 [main] INFO  APIResponse:42 - The response status is 200
2017-08-04 17:08:29 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Test for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@4f2613d1
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Parent for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@65a4798f
2017-08-04 17:08:30 [main] INFO  Org:1002 - *****************Test case: Delete Organization Brands Started*****************
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_brand(id, org_id, `type`, img_url, trademark, title, site_url, description, created_by, updated_by, created_at, updated_at) VALUES(0, 398, '1', '', '', '', '', 'Test for Automation', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@58bf8650
2017-08-04 17:08:30 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/brands/2832, status=200, reason=OK}}
2017-08-04 17:08:30 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:30 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@3a320ade
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE from org_brand WHERE org_id=398 AND description="Test for Automation";
2017-08-04 17:08:30 [main] INFO  Org:1017 - *****************Test case: Delete Organization Brands Ended*****************
2017-08-04 17:08:30 [main] INFO  Org:1386 - *****************Test case: Delete Organization Contact Ways Started*****************
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@545de5a4
2017-08-04 17:08:30 [main] INFO  Org:1402 - *****************Test case: Delete Organization Contact Ways Ended*****************
2017-08-04 17:08:30 [main] INFO  Org:1807 - *****************Test case: Delete Orgs Histories with Bad Cookie Started*****************
2017-08-04 17:08:30 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-08-04 17:08:30 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-08-04 17:08:30 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-08-04 17:08:30 [main] INFO  Org:1815 - *****************Test case: Delete Orgs Histories with Bad Cookie Ended*****************
2017-08-04 17:08:30 [main] INFO  Org:1457 - *****************Test case: Get Orgs Depts List with Wrong OrgId Started*****************
2017-08-04 17:08:30 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/depts/list?text=test+for+automation&orgId=-2, status=200, reason=OK}}
2017-08-04 17:08:30 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ ],
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:30 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:30 [main] INFO  Org:1463 - *****************Test case: Get Orgs Depts List with Wrong OrgId Ended*****************
2017-08-04 17:08:30 [main] INFO  Org:981 - *****************Test case: Post Organization Brands with Bad Cookie Started*****************
2017-08-04 17:08:30 [main] INFO  Org:387 - *****************Test case: Post Organization add Started*****************
2017-08-04 17:08:30 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@5df417a7
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM  organization WHERE id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_dept WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_history WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_stock WHERE org_id=395
2017-08-04 17:08:30 [main] INFO  Org:412 - Post request body is:{
  "description": "Test for automation",
  "source": 0,
  "type": 0,
  "reason": "Test for Automation",
  "name": "Test company",
  "simpleName": "TC",
  "parent": {
	"name":"test for automation"
  },
  "": 0,
  "displayName": "Test for Automation",
  "owner": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "sdfdf",
    "chineseName": "测试公司",
    "nickname": "测试",
    "email": "22@ll.com",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "resetPasswordAt": "2016-12-07T06:07:11.179Z",
    "latestLoginAt": "2016-12-07T06:07:11.179Z",
    "loginFailTimes": 0,
    "username": "rtes",
    "englishName": "fdsa",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.179Z",
    "createdAt": "2016-12-07T06:07:11.179Z"
  },
  "aliases": "Test for Automation",
 
  "orgStocks": [
    {

      "stockExchange": 0,
      "stockCode": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.179Z",
      "createdAt": "2016-12-07T06:07:11.179Z"
    }
  ],
  "orgBrands": [
    {
      "description": "Test for Automation",
      "type": "1",
      "imgUrl": "Test for Automation",
      "trademark": "Test for Automation",
      "siteUrl": "Test for Automation",
      "title": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.179Z",
      "createdAt": "2016-12-07T06:07:11.179Z"
    }
  ],
  "orgContactWays": [
    {
      "address": {
        "location": {
          "type": "Test for Automation",
          "level": 0,
          "name": "Test for Automation",
          "parent": {},
          "parentCode": 0,
          "hot": 0,
          "children": [
            {}
          ],
          "lat": 0,
          "lng": 0,
          "code": 0,
          "createdBy": 0,
          "updatedBy": 0,
          "updatedAt": "2016-12-07T06:07:11.180Z",
          "createdAt": "2016-12-07T06:07:11.180Z"
        },
        "detail": "Test for Automation",
        "lat": 0,
        "lng": 0,
        "updatedAt": "2016-12-07T06:07:11.180Z",
        "createdAt": "2016-12-07T06:07:11.180Z"
      },
      "faxNumber": "Test for Automation",
      "phoneNumber": "Test for Automation",
      "createdByAccount": {
        "permissions": [
          {
            "resType": "Test for Automation",
            "res": 0,
            "accessLevel": 0,
            "actionCode": "Test for Automation"
          }
        ],
        "displayName": "Test for Automation",
        "password": "Test for Automation",
        "chineseName": "Test for Automation",
        "nickname": "Test for Automation",
        "email": "Test for Automation",
        "mobile": "Test for Automation",
        "passwordReset": 0,
        "resetPasswordAt": "2016-12-07T06:07:11.180Z",
        "latestLoginAt": "2016-12-07T06:07:11.180Z",
        "loginFailTimes": 0,
        "username": "Test for Automation",
        "englishName": "Test for Automation",
        "status": 0,
        "roles": [
          "Test for Automation"
        ],
        "createdBy": 0,
        "updatedBy": 0,
        "updatedAt": "2016-12-07T06:07:11.180Z",
        "createdAt": "2016-12-07T06:07:11.180Z"
      },
      "email": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "orgHistories": [
    {
      "description": "Test for Automation",
      "linkUrl": "Test for Automation",
      "timeAt": "2016-12-07T06:07:11.180Z",
      "title": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "shareholders": [
    {
      "holder": 0,
      "holdRate": 0,
      "investAmount": 0,
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "shareholdings": [
    {
      "holder": 0,
      "holdRate": 0,
      "investAmount": 0,
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "orgDepts": [
    {
      "name": "Test for Automation",

      "telNo": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "createdByAccount": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "Test for Automation",
    "chineseName": "Test for Automation",
    "nickname": "Test for Automation",
    "email": "Test for Automation",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "loginFailTimes": 0,
    "username": "Test for Automation",
    "englishName": "Test for Automation",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.180Z",
    "createdAt": "2016-12-07T06:07:11.180Z"
  },
  "updatedByAccount": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "Test for Automation",
    "chineseName": "Test for Automation",
    "nickname": "Test for Automation",
    "email": "Test for Automation",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "resetPasswordAt": "2016-12-07T06:07:11.180Z",
    "latestLoginAt": "2016-12-07T06:07:11.180Z",
    "loginFailTimes": 0,
    "username": "Test for Automation",
    "englishName": "Test for Automation",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.180Z",
    "createdAt": "2016-12-07T06:07:11.180Z"
  },
  "externalJobs": [
    {
      "source": "Test for Automation",
      "": 0,
      "salaryLower": 0,
      "salaryUpper": 0,
      "location": 0,
      "locationStr": "Test for Automation",
      "sourceUrl": "Test for Automation",
      "pubAt": "2016-12-07T06:07:11.180Z",
      "pubAtStr": "Test for Automation",
      "title": "Test for Automation",
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "registedAuthority": "Test for Automation",
  "natureCode": "1",
  "empScale": "1",
  "empMeanSalary": "1",
  "wxPublicNo": "Test for Automation",
  "facebookUrl": "Test for Automation",
  "linkedinUrl": "Test for Automation",
  "weiboUrl": "Test for Automation",
  "twitterUrl": "Test for Automation",
  "qccUnique": "Test for Automation",
  "orgCode": "Test for Automation",
  "licenseNo": "Test for Automation",
  "reasonType": 0,
  "aliasList": [
    "Test for Automation"
  ],
  "imgUrls": "Test for Automation",
  "imgUrlList": [
    "Test for Automation"
  ],
  "financingDetail": {},
  "branches": [
    {}
  ],
  "englishName": "Test for Automation",
  "phoneNo": "Test for Automation",
  "logoUrl": "Test for Automation",
  "siteUrl": "Test for Automation",
  "financingStatus": "1",
  "financingAmount": 0,
  "legalPerson": "Test for Automation",
  "registedCapital": 0,
  "registedAt": "2016-12-07T06:07:11.180Z",
  "turnover": 0,
  "registedNo": "Test for Automation",
  "createdBy": 0,
  "updatedBy": 0,
  "updatedAt": "2016-12-07T06:07:11.180Z",
  "createdAt": "2016-12-07T06:07:11.180Z"
}
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "id" : 400,
    "name" : "Test company",
    "simpleName" : "TC",
    "englishName" : "Test for Automation",
    "aliases" : "Test for Automation",
    "type" : 0,
    "phoneNo" : "Test for Automation",
    "logoUrl" : "Test for Automation",
    "siteUrl" : "Test for Automation",
    "imgUrls" : "Test for Automation",
    "financingStatus" : 1,
    "financingAmount" : 0.00,
    "financingDetail" : { },
    "description" : "Test for automation",
    "legalPerson" : "Test for Automation",
    "registedCapital" : 0.00,
    "registedAt" : "2016-12-07T14:07:11+08:00",
    "turnover" : 0.00,
    "registedNo" : "Test for Automation",
    "registedAuthority" : "Test for Automation",
    "natureCode" : 1,
    "empScale" : 1,
    "empMeanSalary" : 1,
    "wxPublicNo" : "Test for Automation",
    "linkedinUrl" : "Test for Automation",
    "weiboUrl" : "Test for Automation",
    "source" : 0,
    "qccUnique" : "Test for Automation",
    "orgCode" : "Test for Automation",
    "licenseNo" : "Test for Automation",
    "reasonType" : 0,
    "reason" : "Test for Automation",
    "ownerId" : 1,
    "createdBy" : 1,
    "updatedBy" : 1,
    "createdAt" : "2016-12-07T14:07:11+08:00",
    "updatedAt" : "2016-12-07T14:07:11+08:00",
    "displayName" : "Test companyTC",
    "orgStocks" : [ {
      "id" : 17,
      "orgId" : 400,
      "stockExchange" : 0,
      "stockCode" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgBrands" : [ {
      "id" : 2833,
      "orgId" : 400,
      "type" : 1,
      "imgUrl" : "Test for Automation",
      "trademark" : "Test for Automation",
      "title" : "Test for Automation",
      "siteUrl" : "Test for Automation",
      "description" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgContactWays" : [ {
      "id" : 188,
      "orgId" : 400,
      "addressId" : 225,
      "email" : "Test for Automation",
      "faxNumber" : "Test for Automation",
      "phoneNumber" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00",
      "address" : {
        "id" : 225,
        "detail" : "Test for Automation",
        "lat" : 0.0000,
        "lng" : 0.0000,
        "createdBy" : 1,
        "updatedBy" : 1,
        "createdAt" : "2016-12-07T14:07:11+08:00",
        "updatedAt" : "2016-12-07T14:07:11+08:00"
      }
    } ],
    "orgHistories" : [ {
      "id" : 93,
      "orgId" : 400,
      "timeAt" : "2016-12-07T14:07:11+08:00",
      "title" : "Test for Automation",
      "description" : "Test for Automation",
      "linkUrl" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholders" : [ {
      "id" : 489,
      "orgId" : 400,
      "holdRate" : 0.0000,
      "investAmount" : 0.00,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholdings" : [ ],
    "orgDepts" : [ {
      "id" : 223,
      "orgId" : 400,
      "name" : "Test for Automation",
      "telNo" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "externalJobs" : [ {
      "id" : 2444,
      "orgId" : 400,
      "title" : "Test for Automation",
      "salaryLower" : 0.00,
      "salaryUpper" : 0.00,
      "source" : "Test for Automation",
      "sourceUrl" : "Test for Automation",
      "pubAt" : "2016-12-07T14:07:11+08:00",
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ]
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:31 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@3bde62ff
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/400, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "basic" : {
      "id" : 400,
      "name" : "Test company",
      "simpleName" : "TC",
      "englishName" : "Test for Automation",
      "aliases" : "Test for Automation",
      "type" : 0,
      "phoneNo" : "Test for Automation",
      "logoUrl" : "Test for Automation",
      "siteUrl" : "Test for Automation",
      "imgUrls" : "Test for Automation",
      "financingStatus" : 1,
      "financingAmount" : 0.00,
      "financingDetail" : { },
      "description" : "Test for automation",
      "legalPerson" : "Test for Automation",
      "registedCapital" : 0.00,
      "registedAt" : "2016-12-07T14:07:11+08:00",
      "turnover" : 0.00,
      "registedNo" : "Test for Automation",
      "registedAuthority" : "Test for Automation",
      "natureCode" : 1,
      "empScale" : 1,
      "empMeanSalary" : 1,
      "wxPublicNo" : "Test for Automation",
      "linkedinUrl" : "Test for Automation",
      "weiboUrl" : "Test for Automation",
      "source" : 0,
      "qccUnique" : "Test for Automation",
      "orgCode" : "Test for Automation",
      "licenseNo" : "Test for Automation",
      "reasonType" : 0,
      "reason" : "Test for Automation",
      "ownerId" : 1,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00",
      "displayName" : "Test companyTC",
      "aliasList" : [ "Test for Automation" ],
      "imgUrlList" : [ "Test for Automation" ],
      "industryDicts" : [ ],
      "industrialModeDicts" : [ ],
      "highlightDicts" : [ ],
      "owner" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      },
      "createdByAccount" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      },
      "updatedByAccount" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      }
    },
    "orgStocks" : [ {
      "id" : 17,
      "orgId" : 400,
      "stockExchange" : 0,
      "stockCode" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgBrands" : [ {
      "id" : 2833,
      "orgId" : 400,
      "type" : 1,
      "imgUrl" : "Test for Automation",
      "trademark" : "Test for Automation",
      "title" : "Test for Automation",
      "siteUrl" : "Test for Automation",
      "description" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgContactWays" : [ {
      "id" : 188,
      "orgId" : 400,
      "addressId" : 225,
      "email" : "Test for Automation",
      "faxNumber" : "Test for Automation",
      "phoneNumber" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00",
      "address" : {
        "id" : 225,
        "detail" : "Test for Automation",
        "lat" : 0.0000,
        "lng" : 0.0000,
        "createdBy" : 1,
        "updatedBy" : 1,
        "createdAt" : "2016-12-07T14:07:11+08:00",
        "updatedAt" : "2016-12-07T14:07:11+08:00"
      }
    } ],
    "orgHistories" : [ {
      "id" : 93,
      "orgId" : 400,
      "timeAt" : "2016-12-07T14:07:11+08:00",
      "title" : "Test for Automation",
      "description" : "Test for Automation",
      "linkUrl" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholders" : [ {
      "id" : 489,
      "orgId" : 400,
      "holdRate" : 0.0000,
      "investAmount" : 0.00,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholdings" : [ ],
    "orgDepts" : [ {
      "id" : 223,
      "orgId" : 400,
      "name" : "Test for Automation",
      "telNo" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "externalJobs" : [ {
      "id" : 2444,
      "orgId" : 400,
      "title" : "Test for Automation",
      "salaryLower" : 0.00,
      "salaryUpper" : 0.00,
      "source" : "Test for Automation",
      "sourceUrl" : "Test for Automation",
      "pubAt" : "2016-12-07T14:07:11+08:00",
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ]
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:31 [main] INFO  Org:422 - The response body is: /n 
2017-08-04 17:08:31 [main] INFO  Org:423 - {
  "_body" : {
    "basic" : {
      "id" : 400,
      "name" : "Test company",
      "simpleName" : "TC",
      "englishName" : "Test for Automation",
      "aliases" : "Test for Automation",
      "type" : 0,
      "phoneNo" : "Test for Automation",
      "logoUrl" : "Test for Automation",
      "siteUrl" : "Test for Automation",
      "imgUrls" : "Test for Automation",
      "financingStatus" : 1,
      "financingAmount" : 0.00,
      "financingDetail" : { },
      "description" : "Test for automation",
      "legalPerson" : "Test for Automation",
      "registedCapital" : 0.00,
      "registedAt" : "2016-12-07T14:07:11+08:00",
      "turnover" : 0.00,
      "registedNo" : "Test for Automation",
      "registedAuthority" : "Test for Automation",
      "natureCode" : 1,
      "empScale" : 1,
      "empMeanSalary" : 1,
      "wxPublicNo" : "Test for Automation",
      "linkedinUrl" : "Test for Automation",
      "weiboUrl" : "Test for Automation",
      "source" : 0,
      "qccUnique" : "Test for Automation",
      "orgCode" : "Test for Automation",
      "licenseNo" : "Test for Automation",
      "reasonType" : 0,
      "reason" : "Test for Automation",
      "ownerId" : 1,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00",
      "displayName" : "Test companyTC",
      "aliasList" : [ "Test for Automation" ],
      "imgUrlList" : [ "Test for Automation" ],
      "industryDicts" : [ ],
      "industrialModeDicts" : [ ],
      "highlightDicts" : [ ],
      "owner" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      },
      "createdByAccount" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      },
      "updatedByAccount" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      }
    },
    "orgStocks" : [ {
      "id" : 17,
      "orgId" : 400,
      "stockExchange" : 0,
      "stockCode" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgBrands" : [ {
      "id" : 2833,
      "orgId" : 400,
      "type" : 1,
      "imgUrl" : "Test for Automation",
      "trademark" : "Test for Automation",
      "title" : "Test for Automation",
      "siteUrl" : "Test for Automation",
      "description" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "orgContactWays" : [ {
      "id" : 188,
      "orgId" : 400,
      "addressId" : 225,
      "email" : "Test for Automation",
      "faxNumber" : "Test for Automation",
      "phoneNumber" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00",
      "address" : {
        "id" : 225,
        "detail" : "Test for Automation",
        "lat" : 0.0000,
        "lng" : 0.0000,
        "createdBy" : 1,
        "updatedBy" : 1,
        "createdAt" : "2016-12-07T14:07:11+08:00",
        "updatedAt" : "2016-12-07T14:07:11+08:00"
      }
    } ],
    "orgHistories" : [ {
      "id" : 93,
      "orgId" : 400,
      "timeAt" : "2016-12-07T14:07:11+08:00",
      "title" : "Test for Automation",
      "description" : "Test for Automation",
      "linkUrl" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholders" : [ {
      "id" : 489,
      "orgId" : 400,
      "holdRate" : 0.0000,
      "investAmount" : 0.00,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "shareholdings" : [ ],
    "orgDepts" : [ {
      "id" : 223,
      "orgId" : 400,
      "name" : "Test for Automation",
      "telNo" : "Test for Automation",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ],
    "externalJobs" : [ {
      "id" : 2444,
      "orgId" : 400,
      "title" : "Test for Automation",
      "salaryLower" : 0.00,
      "salaryUpper" : 0.00,
      "source" : "Test for Automation",
      "sourceUrl" : "Test for Automation",
      "pubAt" : "2016-12-07T14:07:11+08:00",
      "createdAt" : "2016-12-07T14:07:11+08:00",
      "updatedAt" : "2016-12-07T14:07:11+08:00"
    } ]
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  Org:749 - *****************Test case: Post Organization add Started*****************
2017-08-04 17:08:31 [main] INFO  Org:894 - *****************Test case: Post Organization Brands Started*****************
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:31 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@16afbd92
2017-08-04 17:08:31 [main] INFO  Org:922 - *****************Test case: Post Organization Brands Ended*****************
2017-08-04 17:08:31 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=398AND title="这是测试品牌名称";
2017-08-04 17:08:31 [main] INFO  DBCtrl:85 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="????????"' at line 1
2017-08-04 17:08:31 [main] INFO  Org:1147 - *****************Test case: Post Organization Depts Started*****************
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : 224,
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:31 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@2449cff7
2017-08-04 17:08:31 [main] INFO  Org:1168 - *****************Test case: Post Organization Depts Ended*****************
2017-08-04 17:08:31 [main] INFO  Org:813 - *****************Test case: Post Organization update with Wrong id Started*****************
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-08-04 17:08:31 [main] INFO  Org:823 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-08-04 17:08:31 [main] INFO  Org:1729 - *****************Test case: Post Orgs Histories with No Cookie Started*****************
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-08-04 17:08:31 [main] INFO  Org:1742 - *****************Test case: Post Orgs Histories with No Cookie Ended*****************
2017-08-04 17:08:31 [main] INFO  Org:2300 - *****************Test case: Post Orgs Shareholdings Started*****************
2017-08-04 17:08:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-08-04 17:08:31 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:31 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:31 [main] INFO  Org:2318 - *****************Test case: Post Orgs Shareholdings Ended*****************
2017-08-04 17:08:31 [main] INFO  Org:1024 - *****************Test case: Delete Organization Brands with Wrong Id Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/brands/-2, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-2不存在"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-2不存在"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 对象-2不存在
2017-08-04 17:08:32 [main] INFO  Org:1031 - *****************Test case: Delete Organization Brands with Wrong Id Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1409 - *****************Test case: Delete Organization Contact Ways with Wrong id Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/contactways/-2, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:323)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:32 [main] INFO  Org:1416 - *****************Test case: Delete Organization Contact Ways with Wrong id Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1480 - *****************Test case: Delete Orgs Depts Started*****************
2017-08-04 17:08:32 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_dept (id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at) VALUES(0,398, 'Test for Deleting', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-08-04 17:08:32 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@438bad7c
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/225, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:32 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@420745d7
2017-08-04 17:08:32 [main] INFO  Org:1504 - *****************Test case: Delete Orgs Depts Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1539 - *****************Test case: Delete Orgs Depts with Bad Cookie Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-08-04 17:08:32 [main] INFO  Org:1546 - *****************Test case: Delete Orgs Depts with Bad Cookie Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1555 - *****************Test case: Delete Orgs Depts with No Cookie Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-08-04 17:08:32 [main] INFO  Org:1561 - *****************Test case: Delete Orgs Depts with No Cookie Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1525 - *****************Test case: Delete Orgs Depts with Not Existed Id Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:32 [main] INFO  Org:1532 - *****************Test case:  Delete Orgs Depts with Not Existed  Id Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1511 - *****************Test case: Delete Orgs Depts with Wrong Id Started*****************
2017-08-04 17:08:32 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-08-04 17:08:32 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-08-04 17:08:32 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:32 [main] INFO  Org:1518 - *****************Test case: Delete Orgs Depts with Wrong Id Ended*****************
2017-08-04 17:08:32 [main] INFO  Org:1749 - *****************Test case: Delete Orgs Histories Started*****************
2017-08-04 17:08:32 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_history
(id, org_id, time_at, title, description, link_url, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, CURRENT_TIMESTAMP, 'Test for Automation', 'Automation description', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:33 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@79b663b3
2017-08-04 17:08:33 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/94, status=200, reason=OK}}
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:33 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@deb3b60
2017-08-04 17:08:33 [main] INFO  Org:1769 - *****************Test case: Delete Orgs Histories  Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:1792 - *****************Test case: Delete Orgs Histories with Bad Id Started*****************
2017-08-04 17:08:33 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:33 [main] INFO  Org:1800 - *****************Test case: Delete Orgs Histories with Bad Id Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:1822 - *****************Test case: Delete Orgs Histories with No Cookie Started*****************
2017-08-04 17:08:33 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-08-04 17:08:33 [main] INFO  Org:1828 - *****************Test case: Delete Orgs Histories with No Cookie Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:1776 - *****************Test case: Delete Orgs Histories with Wrong Id Started*****************
2017-08-04 17:08:33 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/-1, status=200, reason=OK}}
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 对象-1不存在
2017-08-04 17:08:33 [main] INFO  Org:1785 - *****************Test case: Delete Orgs Histories with Wrong Id Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:2244 - *****************Test case: Delete Orgs Shareholders Started*****************
2017-08-04 17:08:33 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_shareholder
(id, org_id, holder_id, hold_rate, invest_amount, invest_detail, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, 398, 0, 0, ?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:33 [main] INFO  DBCtrl:85 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)' at line 3
2017-08-04 17:08:33 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@720653c2
2017-08-04 17:08:33 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=398 AND holder_id=398;
2017-08-04 17:08:33 [main] INFO  Org:2264 - *****************Test case: Post Orgs Shareholders Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:2285 - *****************Test case: Delete Orgs Shareholders with Bad Id Started*****************
2017-08-04 17:08:33 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/shareholders/-1, status=200, reason=OK}}
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:33 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-08-04 17:08:33 [main] INFO  APIResponse:76 - Checking if the body contains 对象-1不存在
2017-08-04 17:08:33 [main] INFO  Org:2293 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-08-04 17:08:33 [main] INFO  Org:2271 - *****************Test case: Delete Orgs Shareholders with Wrong Id Started*****************
2017-08-04 17:08:34 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/shareholders/-1, status=200, reason=OK}}
2017-08-04 17:08:34 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-08-04 17:08:34 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:34 [main] INFO  Org:2278 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-08-04 17:08:34 [main] INFO  Org:1424 - *****************Test case: Get Orgs Depts List Started*****************
2017-08-04 17:08:34 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/depts/list?text=Test+for+automation&orgId=398, status=200, reason=OK}}
2017-08-04 17:08:34 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ {
    "id" : 224,
    "orgId" : 398,
    "name" : "Test for Automation",
    "telNo" : "18883488888",
    "createdBy" : 1,
    "updatedBy" : 1,
    "createdAt" : "2017-01-04T17:08:31+08:00",
    "updatedAt" : "2017-01-04T17:08:31+08:00"
  } ],
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:34 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:34 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@749f539e
2017-08-04 17:08:34 [main] INFO  Org:1450 - *****************Test case: Get Orgs Depts List Ended*****************
2017-08-04 17:08:34 [main] INFO  Org:1471 - *****************Test case: Get Orgs Depts List with Wrong text Started*****************
2017-08-04 17:08:34 [main] INFO  Org:1473 - *****************Test case: Get Orgs Depts List with Wrong text Ended*****************
2017-08-04 17:08:34 [main] INFO  Org:49 - *****************Test case: Get Orgs by id List Started*****************
2017-08-04 17:08:34 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/398, status=200, reason=OK}}
2017-08-04 17:08:34 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "basic" : {
      "id" : 398,
      "name" : "Test for Automation",
      "simpleName" : "test",
      "englishName" : "test",
      "aliases" : "",
      "type" : 0,
      "phoneNo" : "",
      "logoUrl" : "",
      "siteUrl" : "",
      "imgUrls" : "",
      "financingStatus" : 0,
      "financingAmount" : 0.00,
      "financingDetail" : { },
      "description" : "",
      "legalPerson" : "",
      "registedCapital" : 0.00,
      "registedAt" : "2017-01-04T17:08:30+08:00",
      "turnover" : 0.00,
      "registedNo" : "",
      "registedAuthority" : "",
      "parentId" : 0,
      "natureCode" : 0,
      "empScale" : 0,
      "empMeanSalary" : 0,
      "wxPublicNo" : "",
      "linkedinUrl" : "",
      "weiboUrl" : "",
      "source" : 0,
      "qccUnique" : "",
      "orgCode" : "",
      "licenseNo" : "",
      "reasonType" : 0,
      "reason" : "",
      "ownerId" : 0,
      "createdBy" : 0,
      "updatedBy" : 1,
      "createdAt" : "2017-01-04T17:08:30+08:00",
      "updatedAt" : "2017-01-04T17:08:33+08:00",
      "displayName" : "Test for Automationtest",
      "industryDicts" : [ ],
      "industrialModeDicts" : [ ],
      "highlightDicts" : [ ],
      "owner" : { },
      "createdByAccount" : { },
      "updatedByAccount" : {
        "id" : 1,
        "username" : "koth",
        "password" : "F5304CD6B6C2EA1BCC415FD26DCE09A2",
        "chineseName" : "koth",
        "displayName" : "koth",
        "englishName" : "koth",
        "nickname" : "koth chen",
        "email" : "koth@1b2b.cn",
        "mobile" : "13520658802"
      }
    },
    "orgStocks" : [ ],
    "orgBrands" : [ {
      "id" : 2834,
      "orgId" : 398,
      "type" : 2,
      "imgUrl" : "2016-11-21T03:55:04.018Z",
      "trademark" : "这是测试交易信息",
      "title" : "这是测试品牌名称",
      "siteUrl" : "http://xxxxxx.comx",
      "description" : "这是测试历程简述",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2017-01-04T17:08:31+08:00",
      "updatedAt" : "2017-01-04T17:08:31+08:00"
    } ],
    "orgContactWays" : [ ],
    "orgHistories" : [ ],
    "shareholders" : [ {
      "id" : 490,
      "orgId" : 398,
      "holderId" : 399,
      "holdRate" : 20.0000,
      "investAmount" : 2000.00,
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2017-01-04T17:08:31+08:00",
      "updatedAt" : "2017-01-04T17:08:31+08:00",
      "org" : {
        "id" : 399,
        "name" : "Parent for Automation",
        "simpleName" : "test",
        "englishName" : "test",
        "aliases" : "",
        "type" : 0,
        "phoneNo" : "",
        "logoUrl" : "",
        "siteUrl" : "",
        "imgUrls" : "",
        "financingStatus" : 0,
        "financingAmount" : 0.00,
        "financingDetail" : { },
        "description" : "",
        "legalPerson" : "",
        "registedCapital" : 0.00,
        "registedAt" : "2017-01-04T17:08:30+08:00",
        "turnover" : 0.00,
        "registedNo" : "",
        "registedAuthority" : "",
        "parentId" : 0,
        "natureCode" : 0,
        "empScale" : 0,
        "empMeanSalary" : 0,
        "wxPublicNo" : "",
        "linkedinUrl" : "",
        "weiboUrl" : "",
        "source" : 0,
        "qccUnique" : "",
        "orgCode" : "",
        "licenseNo" : "",
        "reasonType" : 0,
        "reason" : "",
        "ownerId" : 0,
        "createdBy" : 0,
        "updatedBy" : 0,
        "createdAt" : "2017-01-04T17:08:30+08:00",
        "updatedAt" : "2017-01-04T17:08:30+08:00",
        "displayName" : "Parent for Automationtest"
      }
    } ],
    "shareholdings" : [ ],
    "orgDepts" : [ {
      "id" : 224,
      "orgId" : 398,
      "name" : "Test for Automation",
      "telNo" : "18883488888",
      "createdBy" : 1,
      "updatedBy" : 1,
      "createdAt" : "2017-01-04T17:08:31+08:00",
      "updatedAt" : "2017-01-04T17:08:31+08:00"
    } ],
    "externalJobs" : [ ]
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:34 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:34 [main] INFO  Org:380 - *****************Test case: Get Orgs by id List Ended*****************
2017-08-04 17:08:34 [main] INFO  Org:845 - *****************Test case: Post Organization Basic Started*****************
2017-08-04 17:08:34 [main] ERROR Org:853 - java.lang.NullPointerException
2017-08-04 17:08:34 [main] INFO  Org:962 - *****************Test case: Post Organization Brands with No Cookie Started*****************
2017-08-04 17:08:34 [main] INFO  Org:830 - *****************Test case: Post Organization Add with Empty Name Started*****************
2017-08-04 17:08:34 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-08-04 17:08:34 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-08-04 17:08:34 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:34 [main] INFO  Org:838 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-08-04 17:08:34 [main] INFO  Org:860 - *****************Test case: Post Organization Brands Started*****************
2017-08-04 17:08:34 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-08-04 17:08:34 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:34 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:34 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@2bfbffb2
2017-08-04 17:08:34 [main] INFO  Org:886 - *****************Test case: Post Organization Brands Ended*****************
2017-08-04 17:08:34 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=398AND title="Testing for Automation";
2017-08-04 17:08:34 [main] INFO  DBCtrl:85 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="Testing for Automation"' at line 1
2017-08-04 17:08:34 [main] INFO  Org:946 - *****************Test case: Post Organization Brands with No Org Id Started*****************
2017-08-04 17:08:35 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-08-04 17:08:35 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:35 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-08-04 17:08:35 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:35 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-08-04 17:08:35 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE name="Testing for Automation";
2017-08-04 17:08:35 [main] INFO  DBCtrl:85 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-08-04 17:08:35 [main] INFO  Org:956 - *****************Test case: Post Organization Brands with No Org Id Ended*****************
2017-08-04 17:08:35 [main] INFO  Org:930 - *****************Test case: Post Organization Brands with Wrong Org Id Started*****************
2017-08-04 17:08:35 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-08-04 17:08:35 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:35 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:35 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:35 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-08-04 17:08:35 [main] INFO  Org:939 - *****************Test case: Post Organization Brands with Wrong Org Id Ended*****************
2017-08-04 17:08:35 [main] INFO  Org:1077 - *****************Test case: Post Organization Contact Ways Update Started*****************
2017-08-04 17:08:36 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@49a71302
2017-08-04 17:08:36 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_contact_way
(id, org_id, address_id, email, fax_number, phone_number, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, 82, 'test_automation@rest.com', '12374127412', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:36 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@59429fac
2017-08-04 17:08:36 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/contactWays, status=200, reason=OK}}
2017-08-04 17:08:36 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:36 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:36 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@723ed581
2017-08-04 17:08:36 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=398 AND email="TestAutomation@test.com";
2017-08-04 17:08:36 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM address WHERE location_id=0
2017-08-04 17:08:36 [main] INFO  Org:1114 - *****************Test case: Post Organization Contact Ways Update Ended*****************
2017-08-04 17:08:36 [main] INFO  Org:1122 - *****************Test case: Post Organization Contact Ways with no Org Id Started*****************
2017-08-04 17:08:36 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/contactWays, status=200, reason=OK}}
2017-08-04 17:08:36 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:36 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-08-04 17:08:36 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:36 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-08-04 17:08:36 [main] INFO  Org:1139 - *****************Test case: Post Organization Contact Ways  with no Org Id Ended*****************
2017-08-04 17:08:36 [main] INFO  Org:1040 - *****************Test case: Post Organization Contact Ways Started*****************
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@232cce0
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=398 AND email="TestAutomation@test.com";
2017-08-04 17:08:40 [main] INFO  Org:1070 - *****************Test case: Post Organization Contact Ways Ended*****************
2017-08-04 17:08:40 [main] INFO  Org:1213 - *****************Test case: Post Organization Depts Modify Name Started*****************
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, 'Test for Automation modification', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@205b132e
2017-08-04 17:08:40 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@9255c05
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@5da7cee2
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_dept WHERE id=226;
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@5ce4369b
2017-08-04 17:08:40 [main] INFO  Org:1255 - *****************Test case: Post Organization Modify Name Ended*****************
2017-08-04 17:08:40 [main] INFO  Org:1262 - *****************Test case: Post Organization Depts Modify Name with Existed Name Started*****************
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, 'Test for Automation modification', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@7ad54c55
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 398, 'Test for Automation Duplicated', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-08-04 17:08:40 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:40 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "部门Test for Automation Duplicated已存在"
}
2017-08-04 17:08:40 [main] INFO  APIResponse:76 - Checking if the body contains 部门Test for Automation Duplicated已存在
2017-08-04 17:08:40 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "部门Test for Automation Duplicated已存在"
}
2017-08-04 17:08:40 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@6f7e336b
2017-08-04 17:08:40 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@3a2b2322
2017-08-04 17:08:40 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_dept WHERE id=228;
2017-08-04 17:08:40 [main] INFO  Org:1304 - *****************Test case: Post Organization Modify Name with Existed Name Ended*****************
2017-08-04 17:08:40 [main] INFO  Org:1354 - *****************Test case: Post Organization Depts with Special Name Started*****************
2017-08-04 17:08:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : 229,
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:41 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@7918c7f8
2017-08-04 17:08:41 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@1c504e66
2017-08-04 17:08:41 [main] INFO  Org:1379 - *****************Test case: Post Organization Depts with Special Name Ended*****************
2017-08-04 17:08:41 [main] INFO  Org:1331 - *****************Test case: Post Organization Depts with No Org ID Started*****************
2017-08-04 17:08:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-08-04 17:08:41 [main] INFO  Org:1345 - *****************Test case: Post Organization Depts with No Org ID Ended*****************
2017-08-04 17:08:41 [main] INFO  Org:1310 - *****************Test case: Post Organization Depts with No Existed Org Started*****************
2017-08-04 17:08:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-08-04 17:08:41 [main] INFO  Org:1324 - *****************Test case: Post Organization No Existed Org Ended*****************
2017-08-04 17:08:41 [main] INFO  Org:1610 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Started*****************
2017-08-04 17:08:41 [main] INFO  Org:1623 - The request body is: 

2017-08-04 17:08:41 [main] INFO  Org:1624 - {
  "id": 241,
  "orgId": -1,
  "salaryLower": 15000,
  "salaryUpper": 25000,
  "sourceUrl": "http://www.lagou.com/jobs/2611255.html?utm_source=m_cf_seo_ald_zhw",
  "source": "Test for Automation",
  "title": ["Test Automation"]
}
2017-08-04 17:08:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/external_jobs/, status=200, reason=OK}}
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:41 [main] INFO  Org:1628 - The response body is:

2017-08-04 17:08:41 [main] INFO  Org:1629 - {
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:41 [main] INFO  Org:1634 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Ended*****************
2017-08-04 17:08:41 [main] INFO  Org:2171 - *****************Test case: Post Orgs List with Wrong Name Started*****************
2017-08-04 17:08:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/list/, status=200, reason=OK}}
2017-08-04 17:08:41 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ ],
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:41 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:41 [main] INFO  Org:2183 - *****************Test case: Post Orgs List with Wrong Name Ended*****************
2017-08-04 17:08:41 [main] INFO  Org:797 - *****************Test case: Post Organization add Miss Element Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 公司名字不能为空
2017-08-04 17:08:42 [main] INFO  Org:1568 - *****************Test case: Post Orgs External Jobs Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/external_jobs/, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:42 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@2b329bbd
2017-08-04 17:08:42 [main] INFO  Org:1603 - *****************Test case: Post Orgs External Jobs Ended*****************
2017-08-04 17:08:42 [main] INFO  Org:1641 - *****************Test case: Post Orgs Histories Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:42 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@431f1eaf
2017-08-04 17:08:42 [main] INFO  Org:1660 - *****************Test case: Post Orgs Histories Ended*****************
2017-08-04 17:08:42 [main] INFO  Org:1708 - *****************Test case: Post Orgs Histories with bad Cookie Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-08-04 17:08:42 [main] INFO  Org:1722 - *****************Test case: Post Orgs Histories with Bad Cookie Ended*****************
2017-08-04 17:08:42 [main] INFO  Org:1666 - *****************Test case: Post Orgs Histories with no Org Id Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-08-04 17:08:42 [main] INFO  Org:1680 - *****************Test case: Post Orgs Histories with no Org Id Ended*****************
2017-08-04 17:08:42 [main] INFO  Org:1687 - *****************Test case: Post Orgs Histories with Wrong Org Id Started*****************
2017-08-04 17:08:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-08-04 17:08:42 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-08-04 17:08:42 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-08-04 17:08:42 [main] INFO  Org:1701 - *****************Test case: Post Orgs Histories with Wrong Org Id Ended*****************
2017-08-04 17:08:42 [main] INFO  Org:1835 - *****************Test case: Post Orgs List Started*****************
2017-08-04 17:08:43 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/list/, status=200, reason=OK}}
2017-08-04 17:08:43 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司393不存在"
}
2017-08-04 17:08:43 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:43 [main] INFO  Org:2164 - *****************Test case: Post Orgs List Ended*****************
2017-08-04 17:08:43 [main] INFO  Org:2213 - *****************Test case: Post Orgs Shareholders with Name Started*****************
2017-08-04 17:08:43 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-08-04 17:08:43 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 400,
  "_msg" : "Unexpected character ('}' (code 125)): was expecting double-quote to start field name\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@1d1932cf; line: 5, column: 3]"
}
2017-08-04 17:08:43 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-08-04 17:08:43 [main] INFO  Org:2237 - *****************Test case: Post Orgs Shareholders with Name Ended*****************
2017-08-04 17:08:43 [main] INFO  Org:2190 - *****************Test case: Post Orgs Shareholders with Id Started*****************
2017-08-04 17:08:43 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-08-04 17:08:43 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-08-04 17:08:43 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-08-04 17:08:43 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-08-04 17:08:43 [main] INFO  APIResponse:76 - Checking if the body contains 公司名字不能为空
2017-08-04 17:08:43 [main] INFO  Org:2206 - *****************Test case: Post Orgs Shareholders with Id Ended*****************
2017-08-04 17:08:43 [main] INFO  Org:1175 - *****************Test case: Post Organization Depts Duplicated Started*****************
2017-08-04 17:08:43 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-08-04 17:08:43 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@161f6623
2017-08-04 17:08:43 [main] INFO  DBCtrl:61 - com.mysql.jdbc.JDBC42ResultSet@3e15bb06
2017-08-04 17:08:43 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_dept WHERE id=224;
2017-08-04 17:08:43 [main] INFO  Org:1206 - *****************Test case: Post Organization Duplicated Ended*****************
2017-08-04 17:08:43 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Test for Automation "
2017-08-04 17:08:43 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Parent for Automation "
2017-16-04 17:16:17 [main] INFO  Org:2379 - *****************Test suit: Org*****************
2017-16-04 17:16:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-16-04 17:16:18 [main] INFO  APIResponse:42 - The response status is 200
2017-16-04 17:16:18 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-16-04 17:16:18 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Test for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-16-04 17:16:18 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@65a4798f
2017-16-04 17:16:18 [main] ERROR Org:2359 - java.sql.SQLException: After end of result set
2017-16-04 17:16:18 [main] INFO  Org:1002 - *****************Test case: Delete Organization Brands Started*****************
2017-16-04 17:16:18 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO org_brand(id, org_id, `type`, img_url, trademark, title, site_url, description, created_by, updated_by, created_at, updated_at) VALUES(0, 0, '1', '', '', '', '', 'Test for Automation', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-16-04 17:16:18 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@10fde30a
2017-16-04 17:16:18 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE from org_brand WHERE org_id=0 AND description="Test for Automation";
2017-16-04 17:16:18 [main] INFO  Org:1017 - *****************Test case: Delete Organization Brands Ended*****************
2017-16-04 17:16:18 [main] INFO  Org:1386 - *****************Test case: Delete Organization Contact Ways Started*****************
2017-16-04 17:16:18 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@39dcf4b0
2017-16-04 17:16:18 [main] INFO  Org:1402 - *****************Test case: Delete Organization Contact Ways Ended*****************
2017-16-04 17:16:18 [main] INFO  Org:1807 - *****************Test case: Delete Orgs Histories with Bad Cookie Started*****************
2017-16-04 17:16:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-16-04 17:16:18 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-16-04 17:16:18 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-16-04 17:16:18 [main] INFO  Org:1815 - *****************Test case: Delete Orgs Histories with Bad Cookie Ended*****************
2017-16-04 17:16:18 [main] INFO  Org:1457 - *****************Test case: Get Orgs Depts List with Wrong OrgId Started*****************
2017-16-04 17:16:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/depts/list?text=test+for+automation&orgId=-2, status=200, reason=OK}}
2017-16-04 17:16:18 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ ],
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:18 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:18 [main] INFO  Org:1463 - *****************Test case: Get Orgs Depts List with Wrong OrgId Ended*****************
2017-16-04 17:16:18 [main] INFO  Org:981 - *****************Test case: Post Organization Brands with Bad Cookie Started*****************
2017-16-04 17:16:18 [main] INFO  Org:387 - *****************Test case: Post Organization add Started*****************
2017-16-04 17:16:18 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@5b6813df
2017-16-04 17:16:18 [main] INFO  Org:412 - Post request body is:{
  "description": "Test for automation",
  "source": 0,
  "type": 0,
  "reason": "Test for Automation",
  "name": "Test company",
  "simpleName": "TC",
  "parent": {
	"name":"test for automation"
  },
  "": 0,
  "displayName": "Test for Automation",
  "owner": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "sdfdf",
    "chineseName": "测试公司",
    "nickname": "测试",
    "email": "22@ll.com",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "resetPasswordAt": "2016-12-07T06:07:11.179Z",
    "latestLoginAt": "2016-12-07T06:07:11.179Z",
    "loginFailTimes": 0,
    "username": "rtes",
    "englishName": "fdsa",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.179Z",
    "createdAt": "2016-12-07T06:07:11.179Z"
  },
  "aliases": "Test for Automation",
 
  "orgStocks": [
    {

      "stockExchange": 0,
      "stockCode": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.179Z",
      "createdAt": "2016-12-07T06:07:11.179Z"
    }
  ],
  "orgBrands": [
    {
      "description": "Test for Automation",
      "type": "1",
      "imgUrl": "Test for Automation",
      "trademark": "Test for Automation",
      "siteUrl": "Test for Automation",
      "title": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.179Z",
      "createdAt": "2016-12-07T06:07:11.179Z"
    }
  ],
  "orgContactWays": [
    {
      "address": {
        "location": {
          "type": "Test for Automation",
          "level": 0,
          "name": "Test for Automation",
          "parent": {},
          "parentCode": 0,
          "hot": 0,
          "children": [
            {}
          ],
          "lat": 0,
          "lng": 0,
          "code": 0,
          "createdBy": 0,
          "updatedBy": 0,
          "updatedAt": "2016-12-07T06:07:11.180Z",
          "createdAt": "2016-12-07T06:07:11.180Z"
        },
        "detail": "Test for Automation",
        "lat": 0,
        "lng": 0,
        "updatedAt": "2016-12-07T06:07:11.180Z",
        "createdAt": "2016-12-07T06:07:11.180Z"
      },
      "faxNumber": "Test for Automation",
      "phoneNumber": "Test for Automation",
      "createdByAccount": {
        "permissions": [
          {
            "resType": "Test for Automation",
            "res": 0,
            "accessLevel": 0,
            "actionCode": "Test for Automation"
          }
        ],
        "displayName": "Test for Automation",
        "password": "Test for Automation",
        "chineseName": "Test for Automation",
        "nickname": "Test for Automation",
        "email": "Test for Automation",
        "mobile": "Test for Automation",
        "passwordReset": 0,
        "resetPasswordAt": "2016-12-07T06:07:11.180Z",
        "latestLoginAt": "2016-12-07T06:07:11.180Z",
        "loginFailTimes": 0,
        "username": "Test for Automation",
        "englishName": "Test for Automation",
        "status": 0,
        "roles": [
          "Test for Automation"
        ],
        "createdBy": 0,
        "updatedBy": 0,
        "updatedAt": "2016-12-07T06:07:11.180Z",
        "createdAt": "2016-12-07T06:07:11.180Z"
      },
      "email": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "orgHistories": [
    {
      "description": "Test for Automation",
      "linkUrl": "Test for Automation",
      "timeAt": "2016-12-07T06:07:11.180Z",
      "title": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "shareholders": [
    {
      "holder": 0,
      "holdRate": 0,
      "investAmount": 0,
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "shareholdings": [
    {
      "holder": 0,
      "holdRate": 0,
      "investAmount": 0,
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "orgDepts": [
    {
      "name": "Test for Automation",

      "telNo": "Test for Automation",
      "createdBy": 0,
      "updatedBy": 0,
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "createdByAccount": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "Test for Automation",
    "chineseName": "Test for Automation",
    "nickname": "Test for Automation",
    "email": "Test for Automation",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "loginFailTimes": 0,
    "username": "Test for Automation",
    "englishName": "Test for Automation",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.180Z",
    "createdAt": "2016-12-07T06:07:11.180Z"
  },
  "updatedByAccount": {
    "permissions": [
      {
        "resType": "Test for Automation",
        "res": 0,
        "accessLevel": 0,
        "actionCode": "Test for Automation"
      }
    ],
    "": 0,
    "displayName": "Test for Automation",
    "password": "Test for Automation",
    "chineseName": "Test for Automation",
    "nickname": "Test for Automation",
    "email": "Test for Automation",
    "mobile": "Test for Automation",
    "passwordReset": 0,
    "resetPasswordAt": "2016-12-07T06:07:11.180Z",
    "latestLoginAt": "2016-12-07T06:07:11.180Z",
    "loginFailTimes": 0,
    "username": "Test for Automation",
    "englishName": "Test for Automation",
    "status": 0,
    "roles": [
      "Test for Automation"
    ],
    "createdBy": 0,
    "updatedBy": 0,
    "updatedAt": "2016-12-07T06:07:11.180Z",
    "createdAt": "2016-12-07T06:07:11.180Z"
  },
  "externalJobs": [
    {
      "source": "Test for Automation",
      "": 0,
      "salaryLower": 0,
      "salaryUpper": 0,
      "location": 0,
      "locationStr": "Test for Automation",
      "sourceUrl": "Test for Automation",
      "pubAt": "2016-12-07T06:07:11.180Z",
      "pubAtStr": "Test for Automation",
      "title": "Test for Automation",
      "updatedAt": "2016-12-07T06:07:11.180Z",
      "createdAt": "2016-12-07T06:07:11.180Z"
    }
  ],
  "registedAuthority": "Test for Automation",
  "natureCode": "1",
  "empScale": "1",
  "empMeanSalary": "1",
  "wxPublicNo": "Test for Automation",
  "facebookUrl": "Test for Automation",
  "linkedinUrl": "Test for Automation",
  "weiboUrl": "Test for Automation",
  "twitterUrl": "Test for Automation",
  "qccUnique": "Test for Automation",
  "orgCode": "Test for Automation",
  "licenseNo": "Test for Automation",
  "reasonType": 0,
  "aliasList": [
    "Test for Automation"
  ],
  "imgUrls": "Test for Automation",
  "imgUrlList": [
    "Test for Automation"
  ],
  "financingDetail": {},
  "branches": [
    {}
  ],
  "englishName": "Test for Automation",
  "phoneNo": "Test for Automation",
  "logoUrl": "Test for Automation",
  "siteUrl": "Test for Automation",
  "financingStatus": "1",
  "financingAmount": 0,
  "legalPerson": "Test for Automation",
  "registedCapital": 0,
  "registedAt": "2016-12-07T06:07:11.180Z",
  "turnover": 0,
  "registedNo": "Test for Automation",
  "createdBy": 0,
  "updatedBy": 0,
  "updatedAt": "2016-12-07T06:07:11.180Z",
  "createdAt": "2016-12-07T06:07:11.180Z"
}
2017-16-04 17:16:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-16-04 17:16:19 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司Test company已存在"
}
2017-16-04 17:16:19 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:19 [main] INFO  Org:749 - *****************Test case: Post Organization add Started*****************
2017-16-04 17:16:19 [main] INFO  Org:894 - *****************Test case: Post Organization Brands Started*****************
2017-16-04 17:16:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-16-04 17:16:19 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:19 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:19 [main] INFO  Org:922 - *****************Test case: Post Organization Brands Ended*****************
2017-16-04 17:16:19 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=0AND title="这是测试品牌名称";
2017-16-04 17:16:19 [main] INFO  DBCtrl:87 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="????????"' at line 1
2017-16-04 17:16:19 [main] INFO  Org:1147 - *****************Test case: Post Organization Depts Started*****************
2017-16-04 17:16:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-16-04 17:16:19 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:19 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:19 [main] INFO  Org:1168 - *****************Test case: Post Organization Depts Ended*****************
2017-16-04 17:16:19 [main] INFO  Org:813 - *****************Test case: Post Organization update with Wrong id Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-16-04 17:16:20 [main] INFO  Org:823 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1729 - *****************Test case: Post Orgs Histories with No Cookie Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-16-04 17:16:20 [main] INFO  Org:1742 - *****************Test case: Post Orgs Histories with No Cookie Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:2300 - *****************Test case: Post Orgs Shareholdings Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:20 [main] INFO  Org:2318 - *****************Test case: Post Orgs Shareholdings Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1024 - *****************Test case: Delete Organization Brands with Wrong Id Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/brands/-2, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-2不存在"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-2不存在"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 对象-2不存在
2017-16-04 17:16:20 [main] INFO  Org:1031 - *****************Test case: Delete Organization Brands with Wrong Id Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1409 - *****************Test case: Delete Organization Contact Ways with Wrong id Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/contactways/-2, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:323)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:20 [main] INFO  Org:1416 - *****************Test case: Delete Organization Contact Ways with Wrong id Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1480 - *****************Test case: Delete Orgs Depts Started*****************
2017-16-04 17:16:20 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO org_dept (id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at) VALUES(0,0, 'Test for Deleting', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-16-04 17:16:20 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@1fe8d51b
2017-16-04 17:16:20 [main] INFO  Org:1504 - *****************Test case: Delete Orgs Depts Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1539 - *****************Test case: Delete Orgs Depts with Bad Cookie Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-16-04 17:16:20 [main] INFO  Org:1546 - *****************Test case: Delete Orgs Depts with Bad Cookie Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1555 - *****************Test case: Delete Orgs Depts with No Cookie Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-16-04 17:16:20 [main] INFO  Org:1561 - *****************Test case: Delete Orgs Depts with No Cookie Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1525 - *****************Test case: Delete Orgs Depts with Not Existed Id Started*****************
2017-16-04 17:16:20 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-16-04 17:16:20 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-16-04 17:16:20 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:20 [main] INFO  Org:1532 - *****************Test case:  Delete Orgs Depts with Not Existed  Id Ended*****************
2017-16-04 17:16:20 [main] INFO  Org:1511 - *****************Test case: Delete Orgs Depts with Wrong Id Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/depts/string, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:21 [main] INFO  Org:1518 - *****************Test case: Delete Orgs Depts with Wrong Id Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1749 - *****************Test case: Delete Orgs Histories Started*****************
2017-16-04 17:16:21 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO org_history
(id, org_id, time_at, title, description, link_url, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, CURRENT_TIMESTAMP, 'Test for Automation', 'Automation description', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:21 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@251ebf23
2017-16-04 17:16:21 [main] INFO  Org:1769 - *****************Test case: Delete Orgs Histories  Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1792 - *****************Test case: Delete Orgs Histories with Bad Id Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:21 [main] INFO  Org:1800 - *****************Test case: Delete Orgs Histories with Bad Id Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1822 - *****************Test case: Delete Orgs Histories with No Cookie Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/test, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 401
2017-16-04 17:16:21 [main] INFO  Org:1828 - *****************Test case: Delete Orgs Histories with No Cookie Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1776 - *****************Test case: Delete Orgs Histories with Wrong Id Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/histories/-1, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 对象-1不存在
2017-16-04 17:16:21 [main] INFO  Org:1785 - *****************Test case: Delete Orgs Histories with Wrong Id Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:2244 - *****************Test case: Delete Orgs Shareholders Started*****************
2017-16-04 17:16:21 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO org_shareholder
(id, org_id, holder_id, hold_rate, invest_amount, invest_detail, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, 0, 0, 0, ?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:21 [main] INFO  DBCtrl:87 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)' at line 3
2017-16-04 17:16:21 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@3956b302
2017-16-04 17:16:21 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=0 AND holder_id=0;
2017-16-04 17:16:21 [main] INFO  Org:2264 - *****************Test case: Post Orgs Shareholders Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:2285 - *****************Test case: Delete Orgs Shareholders with Bad Id Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/shareholders/-1, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 对象-1不存在
2017-16-04 17:16:21 [main] INFO  Org:2293 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:2271 - *****************Test case: Delete Orgs Shareholders with Wrong Id Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/shareholders/-1, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "对象-1不存在"
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:21 [main] INFO  Org:2278 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1424 - *****************Test case: Get Orgs Depts List Started*****************
2017-16-04 17:16:21 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/depts/list?text=Test+for+automation&orgId=0, status=200, reason=OK}}
2017-16-04 17:16:21 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ ],
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:21 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:21 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@534ca02b
2017-16-04 17:16:21 [main] INFO  Org:1450 - *****************Test case: Get Orgs Depts List Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:1471 - *****************Test case: Get Orgs Depts List with Wrong text Started*****************
2017-16-04 17:16:21 [main] INFO  Org:1473 - *****************Test case: Get Orgs Depts List with Wrong text Ended*****************
2017-16-04 17:16:21 [main] INFO  Org:49 - *****************Test case: Get Orgs by id List Started*****************
2017-16-04 17:16:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/orgs/0, status=200, reason=OK}}
2017-16-04 17:16:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:22 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:22 [main] INFO  Org:380 - *****************Test case: Get Orgs by id List Ended*****************
2017-16-04 17:16:22 [main] INFO  Org:845 - *****************Test case: Post Organization Basic Started*****************
2017-16-04 17:16:22 [main] ERROR Org:853 - java.lang.NullPointerException
2017-16-04 17:16:22 [main] INFO  Org:962 - *****************Test case: Post Organization Brands with No Cookie Started*****************
2017-16-04 17:16:22 [main] INFO  Org:830 - *****************Test case: Post Organization Add with Empty Name Started*****************
2017-16-04 17:16:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-16-04 17:16:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-16-04 17:16:22 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:22 [main] INFO  Org:838 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-16-04 17:16:22 [main] INFO  Org:860 - *****************Test case: Post Organization Brands Started*****************
2017-16-04 17:16:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-16-04 17:16:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:22 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:22 [main] INFO  Org:886 - *****************Test case: Post Organization Brands Ended*****************
2017-16-04 17:16:22 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=0AND title="Testing for Automation";
2017-16-04 17:16:22 [main] INFO  DBCtrl:87 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="Testing for Automation"' at line 1
2017-16-04 17:16:22 [main] INFO  Org:946 - *****************Test case: Post Organization Brands with No Org Id Started*****************
2017-16-04 17:16:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-16-04 17:16:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:23 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-16-04 17:16:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:23 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-16-04 17:16:23 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_contact_way WHERE name="Testing for Automation";
2017-16-04 17:16:23 [main] INFO  DBCtrl:87 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-16-04 17:16:23 [main] INFO  Org:956 - *****************Test case: Post Organization Brands with No Org Id Ended*****************
2017-16-04 17:16:23 [main] INFO  Org:930 - *****************Test case: Post Organization Brands with Wrong Org Id Started*****************
2017-16-04 17:16:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/brands, status=200, reason=OK}}
2017-16-04 17:16:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:23 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:23 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-16-04 17:16:23 [main] INFO  Org:939 - *****************Test case: Post Organization Brands with Wrong Org Id Ended*****************
2017-16-04 17:16:23 [main] INFO  Org:1077 - *****************Test case: Post Organization Contact Ways Update Started*****************
2017-16-04 17:16:23 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@21325036
2017-16-04 17:16:23 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT INTO org_contact_way
(id, org_id, address_id, email, fax_number, phone_number, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, 82, 'test_automation@rest.com', '12374127412', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:23 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@6272c96f
2017-16-04 17:16:23 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=0 AND email="TestAutomation@test.com";
2017-16-04 17:16:23 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM address WHERE location_id=0
2017-16-04 17:16:23 [main] INFO  Org:1114 - *****************Test case: Post Organization Contact Ways Update Ended*****************
2017-16-04 17:16:23 [main] INFO  Org:1122 - *****************Test case: Post Organization Contact Ways with no Org Id Started*****************
2017-16-04 17:16:24 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/contactWays, status=200, reason=OK}}
2017-16-04 17:16:24 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:24 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-16-04 17:16:24 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:24 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-16-04 17:16:24 [main] INFO  Org:1139 - *****************Test case: Post Organization Contact Ways  with no Org Id Ended*****************
2017-16-04 17:16:24 [main] INFO  Org:1040 - *****************Test case: Post Organization Contact Ways Started*****************
2017-16-04 17:16:24 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@31cb96e1
2017-16-04 17:16:24 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=0 AND email="TestAutomation@test.com";
2017-16-04 17:16:24 [main] INFO  Org:1070 - *****************Test case: Post Organization Contact Ways Ended*****************
2017-16-04 17:16:24 [main] INFO  Org:1213 - *****************Test case: Post Organization Depts Modify Name Started*****************
2017-16-04 17:16:24 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, 'Test for Automation modification', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:24 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@26dcd8c0
2017-16-04 17:16:24 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@444548a0
2017-16-04 17:16:24 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@3766c667
2017-16-04 17:16:24 [main] INFO  Org:1255 - *****************Test case: Post Organization Modify Name Ended*****************
2017-16-04 17:16:24 [main] INFO  Org:1262 - *****************Test case: Post Organization Depts Modify Name with Existed Name Started*****************
2017-16-04 17:16:24 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, 'Test for Automation modification', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:24 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@3e48e859
2017-16-04 17:16:24 [main] INFO  DBCtrl:76 - Executing the sql statement:INSERT org_dept
(id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at)
VALUES(0, 0, 'Test for Automation Duplicated', '12345678933', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-16-04 17:16:25 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-16-04 17:16:25 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:25 [main] INFO  APIResponse:76 - Checking if the body contains 部门Test for Automation Duplicated已存在
2017-16-04 17:16:25 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@22d9c961
2017-16-04 17:16:25 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@736f3e9e
2017-16-04 17:16:25 [main] INFO  Org:1304 - *****************Test case: Post Organization Modify Name with Existed Name Ended*****************
2017-16-04 17:16:25 [main] INFO  Org:1354 - *****************Test case: Post Organization Depts with Special Name Started*****************
2017-16-04 17:16:25 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-16-04 17:16:25 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:25 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:25 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@26ae880a
2017-16-04 17:16:25 [main] INFO  Org:1379 - *****************Test case: Post Organization Depts with Special Name Ended*****************
2017-16-04 17:16:25 [main] INFO  Org:1331 - *****************Test case: Post Organization Depts with No Org ID Started*****************
2017-16-04 17:16:25 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-16-04 17:16:25 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:25 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-16-04 17:16:25 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:25 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-16-04 17:16:25 [main] INFO  Org:1345 - *****************Test case: Post Organization Depts with No Org ID Ended*****************
2017-16-04 17:16:25 [main] INFO  Org:1310 - *****************Test case: Post Organization Depts with No Existed Org Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/depts, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-16-04 17:16:26 [main] INFO  Org:1324 - *****************Test case: Post Organization No Existed Org Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:1610 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Started*****************
2017-16-04 17:16:26 [main] INFO  Org:1623 - The request body is: 

2017-16-04 17:16:26 [main] INFO  Org:1624 - {
  "id": 241,
  "orgId": -1,
  "salaryLower": 15000,
  "salaryUpper": 25000,
  "sourceUrl": "http://www.lagou.com/jobs/2611255.html?utm_source=m_cf_seo_ald_zhw",
  "source": "Test for Automation",
  "title": ["Test Automation"]
}
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/external_jobs/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:26 [main] INFO  Org:1628 - The response body is:

2017-16-04 17:16:26 [main] INFO  Org:1629 - {
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:26 [main] INFO  Org:1634 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:2171 - *****************Test case: Post Orgs List with Wrong Name Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/list/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : [ ],
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:26 [main] INFO  Org:2183 - *****************Test case: Post Orgs List with Wrong Name Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:797 - *****************Test case: Post Organization add Miss Element Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司名字不能为空"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 公司名字不能为空
2017-16-04 17:16:26 [main] INFO  Org:1568 - *****************Test case: Post Orgs External Jobs Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/external_jobs/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : null,
  "_meta" : {
    "pagination" : {
      "total" : 0,
      "size" : 10,
      "totalPages" : 1,
      "page" : 1,
      "extraInfo" : null
    }
  },
  "_status" : 200,
  "_msg" : ""
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:26 [main] INFO  DBCtrl:57 - com.mysql.jdbc.JDBC42ResultSet@6fd5717c
2017-16-04 17:16:26 [main] INFO  Org:1603 - *****************Test case: Post Orgs External Jobs Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:1641 - *****************Test case: Post Orgs Histories Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:26 [main] INFO  Org:1660 - *****************Test case: Post Orgs Histories Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:1708 - *****************Test case: Post Orgs Histories with bad Cookie Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "access token error, permission denied!"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 403
2017-16-04 17:16:26 [main] INFO  Org:1722 - *****************Test case: Post Orgs Histories with Bad Cookie Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:1666 - *****************Test case: Post Orgs Histories with no Org Id Started*****************
2017-16-04 17:16:26 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains 450
2017-16-04 17:16:26 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 450,
  "_msg" : "orgId不能为空"
}
2017-16-04 17:16:26 [main] INFO  APIResponse:76 - Checking if the body contains orgId不能为空
2017-16-04 17:16:26 [main] INFO  Org:1680 - *****************Test case: Post Orgs Histories with no Org Id Ended*****************
2017-16-04 17:16:26 [main] INFO  Org:1687 - *****************Test case: Post Orgs Histories with Wrong Org Id Started*****************
2017-16-04 17:16:27 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/histories/, status=200, reason=OK}}
2017-16-04 17:16:27 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司-1不存在"
}
2017-16-04 17:16:27 [main] INFO  APIResponse:76 - Checking if the body contains 公司-1不存在
2017-16-04 17:16:27 [main] INFO  Org:1701 - *****************Test case: Post Orgs Histories with Wrong Org Id Ended*****************
2017-16-04 17:16:27 [main] INFO  Org:1835 - *****************Test case: Post Orgs List Started*****************
2017-16-04 17:16:27 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/list/, status=200, reason=OK}}
2017-16-04 17:16:27 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司398不存在"
}
2017-16-04 17:16:27 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:27 [main] INFO  Org:2164 - *****************Test case: Post Orgs List Ended*****************
2017-16-04 17:16:27 [main] INFO  Org:2213 - *****************Test case: Post Orgs Shareholders with Name Started*****************
2017-16-04 17:16:27 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-16-04 17:16:27 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 400,
  "_msg" : "Unexpected character ('}' (code 125)): was expecting double-quote to start field name\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@10a30e30; line: 5, column: 3]"
}
2017-16-04 17:16:27 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-16-04 17:16:27 [main] INFO  Org:2237 - *****************Test case: Post Orgs Shareholders with Name Ended*****************
2017-16-04 17:16:27 [main] INFO  Org:2190 - *****************Test case: Post Orgs Shareholders with Id Started*****************
2017-16-04 17:16:27 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/orgs/shareholders, status=200, reason=OK}}
2017-16-04 17:16:27 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:27 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-16-04 17:16:27 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "公司0不存在"
}
2017-16-04 17:16:27 [main] INFO  APIResponse:76 - Checking if the body contains 公司名字不能为空
2017-16-04 17:16:27 [main] INFO  Org:2206 - *****************Test case: Post Orgs Shareholders with Id Ended*****************
2017-16-04 17:16:27 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM organization where name = "Test for Automation "
2017-16-04 17:16:27 [main] INFO  DBCtrl:76 - Executing the sql statement:DELETE FROM organization where name = "Parent for Automation "
2017-18-04 17:18:18 [main] INFO  Org:2380 - *****************Test suit: Org*****************
2017-18-04 17:18:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-18-04 17:18:19 [main] INFO  APIResponse:42 - The response status is 200
2017-18-04 17:18:19 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Test for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Parent for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-18-04 17:18:19 [main] INFO  Org:1002 - *****************Test case: Delete Organization Brands Started*****************
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_brand(id, org_id, `type`, img_url, trademark, title, site_url, description, created_by, updated_by, created_at, updated_at) VALUES(0, 402, '1', '', '', '', '', 'Test for Automation', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-18-04 17:18:19 [main] INFO  Org:1008 - com.mysql.jdbc.JDBC42ResultSet@6731787b
2017-18-04 17:18:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://a.jihui.io:9090/api/orgs/brands/2837, status=200, reason=OK}}
2017-18-04 17:18:19 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : "success",
  "_status" : 200,
  "_msg" : ""
}
2017-18-04 17:18:19 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE from org_brand WHERE org_id=402 AND description="Test for Automation";
2017-18-04 17:18:19 [main] INFO  Org:1018 - *****************Test case: Delete Organization Brands Ended*****************
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Test for Automation "
2017-18-04 17:18:19 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Parent for Automation "
2017-35-04 17:35:45 [main] INFO  Question:216 - *****************Test suit: Project*****************
2017-35-04 17:35:46 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-35-04 17:35:46 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "token" : "f793422e8ce74db684503ad45ae9c49e"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-35-04 17:35:46 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-35-04 17:35:46 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-35-04 17:35:46 [main] INFO  Question:34 - *****************************************************************
2017-35-04 17:35:46 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-35-04 17:35:46 [main] INFO  Question:55 - Insert the Zhao API Testing record to the DB
2017-35-04 17:35:46 [main] INFO  Question:57 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-35-04 17:35:46 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-35-04 17:35:46 [main] INFO  DBCtrl:84 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'task_mode' in 'field list'
2017-35-04 17:35:46 [main] INFO  Question:70 - Sending Get request
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/0, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "项目下不存在该0记录"
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 204
2017-35-04 17:35:47 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:40 - *****************************************************************
2017-35-04 17:35:47 [main] INFO  Question:194 - **************************************************************************
2017-35-04 17:35:47 [main] INFO  Question:195 - *****************Test case: Post Project Client Started*****************
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-35-04 17:35:47 [main] INFO  Question:208 - *****************Test case: Post Project Client Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:34 - *****************************************************************
2017-35-04 17:35:47 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-35-04 17:35:47 [main] INFO  Question:88 - Sending Get request
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/test, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-35-04 17:35:47 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:40 - *****************************************************************
2017-35-04 17:35:47 [main] INFO  Question:116 - *****************Test case: Get Project getOne with no id Started*****************
2017-35-04 17:35:47 [main] INFO  Question:119 - Sending Get request
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/getOne, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-35-04 17:35:47 [main] INFO  Question:123 - *****************Test case: Get Project getOne with no id Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:34 - *****************************************************************
2017-35-04 17:35:47 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-35-04 17:35:47 [main] INFO  Question:103 - Sending Get request
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/getOne?id=test, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-35-04 17:35:47 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:40 - *****************************************************************
2017-35-04 17:35:47 [main] INFO  Question:131 - **************************************************************************
2017-35-04 17:35:47 [main] INFO  Question:132 - *****************Test case: Post Project Create Started*****************
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-35-04 17:35:47 [main] INFO  Question:140 - *****************Test case: Post Project add Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:147 - **************************************************************************
2017-35-04 17:35:47 [main] INFO  Question:148 - *****************Test case: Post Project with id Started*****************
2017-35-04 17:35:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-35-04 17:35:47 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-35-04 17:35:47 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-35-04 17:35:47 [main] INFO  Question:159 - *****************Test case: Post Project with id Ended*****************
2017-35-04 17:35:47 [main] INFO  Question:236 - *****************Test suit: Project Ended*****************
2017-37-04 17:37:24 [main] INFO  Question:216 - *****************Test suit: Project*****************
2017-37-04 17:37:24 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-37-04 17:37:24 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "token" : "f793422e8ce74db684503ad45ae9c49e"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-37-04 17:37:24 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-37-04 17:37:24 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-37-04 17:37:24 [main] INFO  Question:116 - *****************Test case: Get Project getOne with no id Started*****************
2017-37-04 17:37:24 [main] INFO  Question:119 - Sending Get request
2017-37-04 17:37:25 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/?cookie=xauth%3Df793422e8ce74db684503ad45ae9c49e, status=200, reason=OK}}
2017-37-04 17:37:25 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 405 Method Not Allowed\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(MethodSelectingRouter.java:466)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.access$000(MethodSelectingRouter.java:94)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter$4.apply(MethodSelectingRouter.java:779)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.apply(MethodSelectingRouter.java:371)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:109)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:92)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:61)\norg.glassfish.jersey.process.internal.Stages.process(Stages.java:197)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:318)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-37-04 17:37:25 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-37-04 17:37:25 [main] INFO  Question:123 - *****************Test case: Get Project getOne with no id Ended*****************
2017-37-04 17:37:25 [main] INFO  Question:236 - *****************Test suit: Project Ended*****************
2017-38-04 17:38:14 [main] INFO  Question:216 - *****************Test suit: Project*****************
2017-38-04 17:38:15 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-38-04 17:38:15 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "token" : "f793422e8ce74db684503ad45ae9c49e"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-38-04 17:38:15 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-38-04 17:38:15 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-38-04 17:38:15 [main] INFO  Question:116 - *****************Test case: Get Project getOne with no id Started*****************
2017-38-04 17:38:15 [main] INFO  Question:119 - Sending Get request
2017-38-04 17:38:15 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/?cookie=xauth%3Df793422e8ce74db684503ad45ae9c49e, status=200, reason=OK}}
2017-38-04 17:38:15 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 405 Method Not Allowed\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(MethodSelectingRouter.java:466)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.access$000(MethodSelectingRouter.java:94)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter$4.apply(MethodSelectingRouter.java:779)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.apply(MethodSelectingRouter.java:371)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:109)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:92)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:61)\norg.glassfish.jersey.process.internal.Stages.process(Stages.java:197)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:318)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-38-04 17:38:15 [main] INFO  APIResponse:76 - Checking if the body contains 405
2017-38-04 17:38:15 [main] INFO  Question:123 - *****************Test case: Get Project getOne with no id Ended*****************
2017-38-04 17:38:15 [main] INFO  Question:236 - *****************Test suit: Project Ended*****************
2017-40-04 17:40:10 [main] INFO  Question:230 - *****************Test suit: Project*****************
2017-40-04 17:40:11 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-40-04 17:40:11 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "token" : "f793422e8ce74db684503ad45ae9c49e"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-40-04 17:40:11 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-40-04 17:40:11 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-40-04 17:40:11 [main] INFO  Question:34 - *****************************************************************
2017-40-04 17:40:11 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-40-04 17:40:11 [main] INFO  Question:55 - Insert the Zhao API Testing record to the DB
2017-40-04 17:40:11 [main] INFO  Question:57 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-40-04 17:40:11 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-40-04 17:40:11 [main] INFO  DBCtrl:84 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'task_mode' in 'field list'
2017-40-04 17:40:11 [main] INFO  Question:70 - Sending Get request
2017-40-04 17:40:11 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/0, status=200, reason=OK}}
2017-40-04 17:40:11 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "项目下不存在该0记录"
}
2017-40-04 17:40:11 [main] INFO  APIResponse:76 - Checking if the body contains 204
2017-40-04 17:40:11 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-40-04 17:40:11 [main] INFO  Question:40 - *****************************************************************
2017-40-04 17:40:11 [main] INFO  Question:208 - **************************************************************************
2017-40-04 17:40:11 [main] INFO  Question:209 - *****************Test case: Post Project Client Started*****************
2017-40-04 17:40:11 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-40-04 17:40:11 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-40-04 17:40:11 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-40-04 17:40:11 [main] INFO  Question:222 - *****************Test case: Post Project Client Ended*****************
2017-40-04 17:40:11 [main] INFO  Question:34 - *****************************************************************
2017-40-04 17:40:11 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-40-04 17:40:11 [main] INFO  Question:88 - Sending Get request
2017-40-04 17:40:11 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/test, status=200, reason=OK}}
2017-40-04 17:40:11 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-40-04 17:40:11 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-40-04 17:40:11 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-40-04 17:40:11 [main] INFO  Question:40 - *****************************************************************
2017-40-04 17:40:11 [main] INFO  Question:130 - *****************Test case: Get Project getOne with no id Started*****************
2017-40-04 17:40:11 [main] INFO  Question:133 - Sending Get request
2017-40-04 17:40:12 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/?cookie=xauth%3Df793422e8ce74db684503ad45ae9c49e, status=200, reason=OK}}
2017-40-04 17:40:12 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 405 Method Not Allowed\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(MethodSelectingRouter.java:466)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.access$000(MethodSelectingRouter.java:94)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter$4.apply(MethodSelectingRouter.java:779)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.apply(MethodSelectingRouter.java:371)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:109)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:92)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:61)\norg.glassfish.jersey.process.internal.Stages.process(Stages.java:197)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:318)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-40-04 17:40:12 [main] INFO  APIResponse:76 - Checking if the body contains 405
2017-40-04 17:40:12 [main] INFO  Question:137 - *****************Test case: Get Project getOne with no id Ended*****************
2017-40-04 17:40:12 [main] INFO  Question:34 - *****************************************************************
2017-40-04 17:40:12 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-40-04 17:40:12 [main] INFO  Question:103 - Sending Get request
2017-40-04 17:40:12 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/-1, status=200, reason=OK}}
2017-40-04 17:40:12 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "项目下不存在该-1记录"
}
2017-40-04 17:40:12 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-40-04 17:40:12 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-40-04 17:40:12 [main] INFO  Question:40 - *****************************************************************
2017-40-04 17:40:12 [main] INFO  Question:34 - *****************************************************************
2017-40-04 17:40:12 [main] INFO  Question:35 - *****************Test case: invoke0 Started*****************
2017-40-04 17:40:12 [main] INFO  Question:117 - Sending Get request
2017-40-04 17:40:12 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/getOne?id=test, status=200, reason=OK}}
2017-40-04 17:40:12 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-40-04 17:40:12 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-40-04 17:40:12 [main] INFO  Question:39 - *****************Test case: invoke0 Ended*****************
2017-40-04 17:40:12 [main] INFO  Question:40 - *****************************************************************
2017-40-04 17:40:12 [main] INFO  Question:145 - **************************************************************************
2017-40-04 17:40:12 [main] INFO  Question:146 - *****************Test case: Post Project Create Started*****************
2017-40-04 17:40:12 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-40-04 17:40:12 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-40-04 17:40:12 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-40-04 17:40:12 [main] INFO  Question:154 - *****************Test case: Post Project add Ended*****************
2017-40-04 17:40:12 [main] INFO  Question:161 - **************************************************************************
2017-40-04 17:40:12 [main] INFO  Question:162 - *****************Test case: Post Project with id Started*****************
2017-40-04 17:40:12 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-40-04 17:40:12 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-40-04 17:40:12 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-40-04 17:40:12 [main] INFO  Question:173 - *****************Test case: Post Project with id Ended*****************
2017-40-04 17:40:12 [main] INFO  Question:250 - *****************Test suit: Project Ended*****************
2017-56-04 17:56:21 [main] INFO  Question:238 - *****************Test suit: Project*****************
2017-56-04 17:56:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=200, reason=OK}}
2017-56-04 17:56:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : {
    "token" : "f793422e8ce74db684503ad45ae9c49e"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-56-04 17:56:22 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-56-04 17:56:22 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-56-04 17:56:22 [main] INFO  Question:37 - *****************Test case: Get Project Started*****************
2017-56-04 17:56:22 [main] INFO  Question:38 - *****************************************************************
2017-56-04 17:56:22 [main] INFO  Question:47 - Insert the Zhao API Testing record to the DB
2017-56-04 17:56:22 [main] INFO  Question:49 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-56-04 17:56:22 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO project (id, `type`, task_mode, status, grade, title, org_id, address_id, fee_mode, fee_scale, headcount, forecast_turnover, salary_detail, salary_lower, salary_upper, signed_contract_at, warranty_period, expected_start_at, expected_start_days, probation_days, payback_days, pause_at, started_at, ended_at, job_duty, job_requirement, job_analysis_id, work_years_lower, work_years_upper, age_lower, age_upper, gender_code, bd_id, leader_id, created_by, sorted_by, created_at, updated_at) VALUES(4, 0, 0, '', '', 'Zhao API testing ', 1, 0, '', 0, 0, 0, '', 0, 0, '2016-11-14 00:00:00', 1, '2016-11-15 00:00:00', 0, 0, 0, '2017-11-11 00:00:00', '2016-11-11 00:00:00', '2017-11-11 00:00:00', '', '', 0, 0, 0, 0, 0, '', 0, 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-56-04 17:56:22 [main] INFO  DBCtrl:84 - com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'task_mode' in 'field list'
2017-56-04 17:56:22 [main] INFO  Question:62 - Sending Get request
2017-56-04 17:56:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/0, status=200, reason=OK}}
2017-56-04 17:56:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "项目下不存在该0记录"
}
2017-56-04 17:56:22 [main] INFO  APIResponse:76 - Checking if the body contains 204
2017-56-04 17:56:22 [main] INFO  Question:72 - *****************Test case: Get Project Ended*****************
2017-56-04 17:56:22 [main] INFO  Question:73 - *****************************************************************
2017-56-04 17:56:22 [main] INFO  Question:208 - **************************************************************************
2017-56-04 17:56:22 [main] INFO  Question:209 - *****************Test case: Post Project Client Started*****************
2017-56-04 17:56:22 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project?orgName=test, status=200, reason=OK}}
2017-56-04 17:56:22 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-56-04 17:56:22 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-56-04 17:56:22 [main] INFO  Question:217 - *****************Test case: Post Project Client Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:223 - **************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:224 - *****************Test case: Post Project Client with Wrong OrgName Started*****************
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project?orgName=test, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-56-04 17:56:23 [main] INFO  Question:232 - *****************Test case: Post Project Client with Wrong OrgNae Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:79 - *****************Test case: Get Project  with Bad Id Started*****************
2017-56-04 17:56:23 [main] INFO  Question:80 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:82 - Sending Get request
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/test, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 404 Not Found\norg.glassfish.jersey.server.internal.inject.ParamConverters$AbstractStringReader.fromString(ParamConverters.java:95)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.convert(AbstractParamValueExtractor.java:139)\norg.glassfish.jersey.server.internal.inject.AbstractParamValueExtractor.fromString(AbstractParamValueExtractor.java:130)\norg.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(SingleValueExtractor.java:84)\norg.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.provide(PathParamValueFactoryProvider.java:93)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-56-04 17:56:23 [main] INFO  Question:89 - *****************Test case: Get Project  with Bad Id Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:90 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:130 - *****************Test case: Get Project getOne with no id Started*****************
2017-56-04 17:56:23 [main] INFO  Question:133 - Sending Get request
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/?cookie=xauth%3Df793422e8ce74db684503ad45ae9c49e, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "HTTP 405 Method Not Allowed\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.getMethodRouter(MethodSelectingRouter.java:466)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.access$000(MethodSelectingRouter.java:94)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter$4.apply(MethodSelectingRouter.java:779)\norg.glassfish.jersey.server.internal.routing.MethodSelectingRouter.apply(MethodSelectingRouter.java:371)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:109)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:112)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:92)\norg.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:61)\norg.glassfish.jersey.process.internal.Stages.process(Stages.java:197)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:318)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\norg.eclipse.jetty.server.Server.handle(Server.java:497)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:245)\norg.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 405
2017-56-04 17:56:23 [main] INFO  Question:137 - *****************Test case: Get Project getOne with no id Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:96 - *****************Test case: Get Project  with Wrong Id Started*****************
2017-56-04 17:56:23 [main] INFO  Question:97 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:99 - Sending Get request
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/-1, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "项目下不存在该-1记录"
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 500
2017-56-04 17:56:23 [main] INFO  Question:106 - *****************Test case: Get Project  with Wrong Id Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:107 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:113 - *****************Test case: Get Project  with Wrong Id Started*****************
2017-56-04 17:56:23 [main] INFO  Question:114 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:116 - Sending Get request
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=GET, uri=http://a.jihui.io:9090/api/project/getOne?id=test, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 404
2017-56-04 17:56:23 [main] INFO  Question:122 - *****************Test case: Get Project  with Wrong Id Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:123 - *****************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:145 - **************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:146 - *****************Test case: Post Project Create Started*****************
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-56-04 17:56:23 [main] INFO  Question:154 - *****************Test case: Post Project add Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:161 - **************************************************************************
2017-56-04 17:56:23 [main] INFO  Question:162 - *****************Test case: Post Project with id Started*****************
2017-56-04 17:56:23 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/project, status=200, reason=OK}}
2017-56-04 17:56:23 [main] INFO  APIResponse:75 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : ""
}
2017-56-04 17:56:23 [main] INFO  APIResponse:76 - Checking if the body contains 200
2017-56-04 17:56:23 [main] INFO  Question:173 - *****************Test case: Post Project with id Ended*****************
2017-56-04 17:56:23 [main] INFO  Question:258 - *****************Test suit: Project Ended*****************
2017-14-18 16:14:38 [main] INFO  Question:251 - *****************Test suit: Project*****************
2017-15-18 16:15:41 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://a.jihui.io:9090/api/xauth, status=504, reason=Gateway Time-out}}
2017-25-24 17:25:10 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-25-24 17:25:10 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-25-24 17:25:10 [main] INFO  APIResponse:38 - The response status is 200
2017-25-24 17:25:11 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-25-24 17:25:11 [main] INFO  APIResponse:38 - The response status is 200
2017-25-24 17:25:11 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-25-24 17:25:11 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-27-24 17:27:39 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-27-24 17:27:40 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-27-24 17:27:40 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : {
    "token" : "a360bf32a5e941c48a5c65d8e32d0a4b"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-27-24 17:27:40 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-27-24 17:27:40 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-27-24 17:27:40 [main] INFO  APIResponse:38 - The response status is 200
2017-27-24 17:27:40 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-27-24 17:27:40 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-30-24 17:30:01 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-30-24 17:30:02 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-30-24 17:30:02 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : {
    "token" : "d6e10137ab1c4a70a71b2655947cbb45"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-30-24 17:30:02 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-30-24 17:30:02 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-30-24 17:30:02 [main] INFO  APIResponse:38 - The response status is 200
2017-30-24 17:30:02 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-30-24 17:30:02 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-32-24 17:32:31 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-32-24 17:32:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-32-24 17:32:31 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : {
    "token" : "d6e10137ab1c4a70a71b2655947cbb45"
  },
  "_status" : 200,
  "_msg" : ""
}
2017-32-24 17:32:31 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-32-24 17:32:31 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-32-24 17:32:31 [main] INFO  APIResponse:38 - The response status is 200
2017-32-24 17:32:31 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-32-24 17:32:31 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-39-24 17:39:50 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-39-24 17:39:51 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth?password=123456&name=pp, status=200, reason=OK}}
2017-39-24 17:39:51 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(FormParamValueFactoryProvider.java:183)\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(FormParamValueFactoryProvider.java:167)\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.provide(FormParamValueFactoryProvider.java:118)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\norg.eclipse.jetty.server.Server.handle(Server.java:524)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)\norg.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\norg.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\norg.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\norg.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-39-24 17:39:51 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-40-24 17:40:49 [main] INFO  Resume:207 - *****************Test suit: Resume*****************
2017-40-24 17:40:49 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-40-24 17:40:49 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "The @FormParam is utilized when the content type of the request entity is not application/x-www-form-urlencoded\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(FormParamValueFactoryProvider.java:183)\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(FormParamValueFactoryProvider.java:167)\norg.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.provide(FormParamValueFactoryProvider.java:118)\norg.glassfish.jersey.server.spi.internal.ParamValueFactoryWithSource.provide(ParamValueFactoryWithSource.java:71)\norg.glassfish.jersey.server.spi.internal.ParameterValueHelper.getParameterValues(ParameterValueHelper.java:90)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues(JavaResourceMethodDispatcherProvider.java:127)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\norg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\norg.glassfish.jersey.internal.Errors.process(Errors.java:315)\norg.glassfish.jersey.internal.Errors.process(Errors.java:297)\norg.glassfish.jersey.internal.Errors.process(Errors.java:267)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\ncom.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:287)\ncom.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:277)\ncom.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:182)\ncom.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:91)\ncom.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\ncom.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:119)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:133)\ncom.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:130)\ncom.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:203)\ncom.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:130)\norg.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1174)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1106)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\norg.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\norg.eclipse.jetty.server.Server.handle(Server.java:524)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)\norg.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\norg.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\norg.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\norg.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\norg.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\njava.lang.Thread.run(Thread.java:745)\n"
}
2017-40-24 17:40:49 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-49-24 17:49:05 [main] INFO  Resume:209 - *****************Test suit: Resume*****************
2017-49-24 17:49:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=500, reason=Internal Server Error}}
2017-49-24 17:49:05 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /xauth. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-49-24 17:49:05 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-55-24 17:55:39 [main] INFO  Resume:209 - *****************Test suit: Resume*****************
2017-55-24 17:55:39 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-55-24 17:55:39 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-55-24 17:55:39 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-27-24 18:27:06 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-27-24 18:27:07 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-27-24 18:27:07 [main] INFO  APIResponse:38 - The response status is 200
2017-27-24 18:27:07 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-27-24 18:27:07 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-28-24 18:28:15 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-28-24 18:28:16 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-28-24 18:28:16 [main] INFO  APIResponse:38 - The response status is 200
2017-28-24 18:28:16 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-28-24 18:28:16 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-31-24 18:31:01 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-31-24 18:31:01 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-31-24 18:31:01 [main] INFO  APIResponse:38 - The response status is 200
2017-31-24 18:31:01 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-31-24 18:31:01 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-45-24 18:45:13 [main] INFO  Org:2379 - *****************Test suit: Org*****************
2017-45-24 18:45:14 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-45-24 18:45:14 [main] INFO  APIResponse:38 - The response status is 200
2017-45-24 18:45:14 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Test for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Parent for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-45-24 18:45:14 [main] INFO  Org:1001 - *****************Test case: Delete Organization Brands Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_brand(id, org_id, `type`, img_url, trademark, title, site_url, description, created_by, updated_by, created_at, updated_at) VALUES(0, 532, '1', '', '', '', '', 'Test for Automation', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-45-24 18:45:14 [main] INFO  Org:1008 - Get the id2946
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE from org_brand WHERE org_id=532 AND description="Test for Automation";
2017-45-24 18:45:14 [main] INFO  Org:1017 - *****************Test case: Delete Organization Brands Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1386 - *****************Test case: Delete Organization Contact Ways Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1402 - *****************Test case: Delete Organization Contact Ways Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1807 - *****************Test case: Delete Orgs Histories with Bad Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1815 - *****************Test case: Delete Orgs Histories with Bad Cookie Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1457 - *****************Test case: Get Orgs Depts List with Wrong OrgId Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1463 - *****************Test case: Get Orgs Depts List with Wrong OrgId Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:980 - *****************Test case: Post Organization Brands with Bad Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  Org:386 - *****************Test case: Post Organization add Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM  organization WHERE id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_dept WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_history WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_stock WHERE org_id=400
2017-45-24 18:45:14 [main] INFO  Org:748 - *****************Test case: Post Organization add Started*****************
2017-45-24 18:45:14 [main] INFO  Org:893 - *****************Test case: Post Organization Brands Started*****************
2017-45-24 18:45:14 [main] INFO  Org:921 - *****************Test case: Post Organization Brands Ended*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=532AND title="这是测试品牌名称";
2017-45-24 18:45:14 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="????????"' at line 1
2017-45-24 18:45:14 [main] INFO  Org:1147 - *****************Test case: Post Organization Depts Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1168 - *****************Test case: Post Organization Depts Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:812 - *****************Test case: Post Organization update with Wrong id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:822 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1729 - *****************Test case: Post Orgs Histories with No Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/orgs/histories/, status=200, reason=OK}}
2017-45-24 18:45:14 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-45-24 18:45:14 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-45-24 18:45:14 [main] INFO  Org:1742 - *****************Test case: Post Orgs Histories with No Cookie Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:2300 - *****************Test case: Post Orgs Shareholdings Started*****************
2017-45-24 18:45:14 [main] INFO  Org:2318 - *****************Test case: Post Orgs Shareholdings Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1024 - *****************Test case: Delete Organization Brands with Wrong Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1031 - *****************Test case: Delete Organization Brands with Wrong Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1409 - *****************Test case: Delete Organization Contact Ways with Wrong id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1416 - *****************Test case: Delete Organization Contact Ways with Wrong id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1480 - *****************Test case: Delete Orgs Depts Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_dept (id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at) VALUES(0,532, 'Test for Deleting', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-45-24 18:45:14 [main] INFO  Org:1504 - *****************Test case: Delete Orgs Depts Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1539 - *****************Test case: Delete Orgs Depts with Bad Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1546 - *****************Test case: Delete Orgs Depts with Bad Cookie Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1555 - *****************Test case: Delete Orgs Depts with No Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://am2-test.imd.com/api/orgs/depts/string, status=200, reason=OK}}
2017-45-24 18:45:14 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-45-24 18:45:14 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-45-24 18:45:14 [main] INFO  Org:1561 - *****************Test case: Delete Orgs Depts with No Cookie Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1525 - *****************Test case: Delete Orgs Depts with Not Existed Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1532 - *****************Test case:  Delete Orgs Depts with Not Existed  Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1511 - *****************Test case: Delete Orgs Depts with Wrong Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1518 - *****************Test case: Delete Orgs Depts with Wrong Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1749 - *****************Test case: Delete Orgs Histories Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1769 - *****************Test case: Delete Orgs Histories  Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1792 - *****************Test case: Delete Orgs Histories with Bad Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1800 - *****************Test case: Delete Orgs Histories with Bad Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1822 - *****************Test case: Delete Orgs Histories with No Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://am2-test.imd.com/api/orgs/histories/test, status=200, reason=OK}}
2017-45-24 18:45:14 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-45-24 18:45:14 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-45-24 18:45:14 [main] INFO  Org:1828 - *****************Test case: Delete Orgs Histories with No Cookie Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1776 - *****************Test case: Delete Orgs Histories with Wrong Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1785 - *****************Test case: Delete Orgs Histories with Wrong Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:2244 - *****************Test case: Delete Orgs Shareholders Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_shareholder
(id, org_id, holder_id, hold_rate, invest_amount, invest_detail, created_by, updated_by, created_at, updated_at)
VALUES(0, 532, 532, 0, 0, ?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-45-24 18:45:14 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)' at line 3
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=532 AND holder_id=532;
2017-45-24 18:45:14 [main] INFO  Org:2264 - *****************Test case: Post Orgs Shareholders Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:2285 - *****************Test case: Delete Orgs Shareholders with Bad Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:2293 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:2271 - *****************Test case: Delete Orgs Shareholders with Wrong Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:2278 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1424 - *****************Test case: Get Orgs Depts List Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1450 - *****************Test case: Get Orgs Depts List Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1471 - *****************Test case: Get Orgs Depts List with Wrong text Started*****************
2017-45-24 18:45:14 [main] INFO  Org:1473 - *****************Test case: Get Orgs Depts List with Wrong text Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:58 - *****************Test case: Get Orgs by id List Started*****************
2017-45-24 18:45:14 [main] INFO  Org:379 - *****************Test case: Get Orgs by id List Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:844 - *****************Test case: Post Organization Basic Started*****************
2017-45-24 18:45:14 [main] ERROR Org:852 - java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
2017-45-24 18:45:14 [main] INFO  Org:961 - *****************Test case: Post Organization Brands with No Cookie Started*****************
2017-45-24 18:45:14 [main] INFO  Org:829 - *****************Test case: Post Organization Add with Empty Name Started*****************
2017-45-24 18:45:14 [main] INFO  Org:837 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:859 - *****************Test case: Post Organization Brands Started*****************
2017-45-24 18:45:14 [main] INFO  Org:885 - *****************Test case: Post Organization Brands Ended*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=532AND title="Testing for Automation";
2017-45-24 18:45:14 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="Testing for Automation"' at line 1
2017-45-24 18:45:14 [main] INFO  Org:945 - *****************Test case: Post Organization Brands with No Org Id Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE name="Testing for Automation";
2017-45-24 18:45:14 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-45-24 18:45:14 [main] INFO  Org:955 - *****************Test case: Post Organization Brands with No Org Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:929 - *****************Test case: Post Organization Brands with Wrong Org Id Started*****************
2017-45-24 18:45:14 [main] INFO  Org:938 - *****************Test case: Post Organization Brands with Wrong Org Id Ended*****************
2017-45-24 18:45:14 [main] INFO  Org:1077 - *****************Test case: Post Organization Contact Ways Update Started*****************
2017-45-24 18:45:14 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=532 AND email="TestAutomation@test.com";
2017-45-24 18:45:15 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM address WHERE location_id=0
2017-45-24 18:45:15 [main] INFO  Org:1114 - *****************Test case: Post Organization Contact Ways Update Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1122 - *****************Test case: Post Organization Contact Ways with no Org Id Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1139 - *****************Test case: Post Organization Contact Ways  with no Org Id Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1040 - *****************Test case: Post Organization Contact Ways Started*****************
2017-45-24 18:45:15 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=532 AND email="TestAutomation@test.com";
2017-45-24 18:45:15 [main] INFO  Org:1070 - *****************Test case: Post Organization Contact Ways Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1213 - *****************Test case: Post Organization Depts Modify Name Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1255 - *****************Test case: Post Organization Modify Name Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1262 - *****************Test case: Post Organization Depts Modify Name with Existed Name Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1304 - *****************Test case: Post Organization Modify Name with Existed Name Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1354 - *****************Test case: Post Organization Depts with Special Name Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1379 - *****************Test case: Post Organization Depts with Special Name Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1331 - *****************Test case: Post Organization Depts with No Org ID Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1345 - *****************Test case: Post Organization Depts with No Org ID Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1310 - *****************Test case: Post Organization Depts with No Existed Org Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1324 - *****************Test case: Post Organization No Existed Org Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1610 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1634 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:2171 - *****************Test case: Post Orgs List with Wrong Name Started*****************
2017-45-24 18:45:15 [main] INFO  Org:2183 - *****************Test case: Post Orgs List with Wrong Name Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:796 - *****************Test case: Post Organization add Miss Element Started*****************
2017-45-24 18:45:15 [main] INFO  Org:805 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1568 - *****************Test case: Post Orgs External Jobs Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1603 - *****************Test case: Post Orgs External Jobs Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1641 - *****************Test case: Post Orgs Histories Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1660 - *****************Test case: Post Orgs Histories Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1708 - *****************Test case: Post Orgs Histories with bad Cookie Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1722 - *****************Test case: Post Orgs Histories with Bad Cookie Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1666 - *****************Test case: Post Orgs Histories with no Org Id Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1680 - *****************Test case: Post Orgs Histories with no Org Id Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1687 - *****************Test case: Post Orgs Histories with Wrong Org Id Started*****************
2017-45-24 18:45:15 [main] INFO  Org:1701 - *****************Test case: Post Orgs Histories with Wrong Org Id Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:1835 - *****************Test case: Post Orgs List Started*****************
2017-45-24 18:45:15 [main] INFO  Org:2164 - *****************Test case: Post Orgs List Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:2213 - *****************Test case: Post Orgs Shareholders with Name Started*****************
2017-45-24 18:45:15 [main] INFO  Org:2237 - *****************Test case: Post Orgs Shareholders with Name Ended*****************
2017-45-24 18:45:15 [main] INFO  Org:2190 - *****************Test case: Post Orgs Shareholders with Id Started*****************
2017-45-24 18:45:15 [main] INFO  Org:2206 - *****************Test case: Post Orgs Shareholders with Id Ended*****************
2017-45-24 18:45:15 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Test for Automation "
2017-45-24 18:45:15 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Parent for Automation "
2017-47-24 18:47:17 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-47-24 18:47:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-47-24 18:47:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-47-24 18:47:18 [main] INFO  APIResponse:38 - The response status is 200
2017-47-24 18:47:18 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-47-24 18:47:18 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-47-24 18:47:45 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-47-24 18:47:45 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-47-24 18:47:45 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-47-24 18:47:45 [main] INFO  APIResponse:38 - The response status is 200
2017-47-24 18:47:45 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-47-24 18:47:45 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-50-24 18:50:46 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-50-24 18:50:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-50-24 18:50:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-50-24 18:50:47 [main] INFO  APIResponse:38 - The response status is 200
2017-50-24 18:50:47 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-50-24 18:50:47 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-51-24 18:51:49 [main] INFO  Org:2379 - *****************Test suit: Org*****************
2017-51-24 18:51:50 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-51-24 18:51:50 [main] INFO  APIResponse:38 - The response status is 200
2017-51-24 18:51:50 [main] INFO  DBCtrl:20 - Load mysql driver successfully
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Test for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO organization(id, name, simple_name, english_name, aliases, `type`, phone_no, logo_url, site_url, img_urls, financing_status, financing_amount, financing_detail, description, legal_person, registed_capital, registed_at, turnover, registed_no, registed_authority, parent_id, nature_code, emp_scale, emp_mean_salary, wx_public_no, linkedin_url, weibo_url, `source`, qcc_unique, org_code, license_no, reason_type, reason, owner_id, created_by, updated_by, created_at, updated_at)VALUES(0, 'Parent for Automation ', 'test', 'test', '', 0, '', '', '', '', 0, 0, '{}', '', '', 0, CURRENT_TIMESTAMP, 0, '', '', 0, 0, 0, 0, '', '', '', 0, '', '', '', 0, '', 0, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-51-24 18:51:50 [main] INFO  Org:1001 - *****************Test case: Delete Organization Brands Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_brand(id, org_id, `type`, img_url, trademark, title, site_url, description, created_by, updated_by, created_at, updated_at) VALUES(0, 534, '1', '', '', '', '', 'Test for Automation', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-51-24 18:51:50 [main] INFO  Org:1008 - Get the id2947
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE from org_brand WHERE org_id=534 AND description="Test for Automation";
2017-51-24 18:51:50 [main] INFO  Org:1017 - *****************Test case: Delete Organization Brands Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1386 - *****************Test case: Delete Organization Contact Ways Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1402 - *****************Test case: Delete Organization Contact Ways Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1807 - *****************Test case: Delete Orgs Histories with Bad Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1815 - *****************Test case: Delete Orgs Histories with Bad Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1457 - *****************Test case: Get Orgs Depts List with Wrong OrgId Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1463 - *****************Test case: Get Orgs Depts List with Wrong OrgId Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:980 - *****************Test case: Post Organization Brands with Bad Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  Org:386 - *****************Test case: Post Organization add Started*****************
2017-51-24 18:51:50 [main] INFO  Org:748 - *****************Test case: Post Organization add Started*****************
2017-51-24 18:51:50 [main] INFO  Org:893 - *****************Test case: Post Organization Brands Started*****************
2017-51-24 18:51:50 [main] INFO  Org:921 - *****************Test case: Post Organization Brands Ended*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=534AND title="这是测试品牌名称";
2017-51-24 18:51:50 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="????????"' at line 1
2017-51-24 18:51:50 [main] INFO  Org:1147 - *****************Test case: Post Organization Depts Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1168 - *****************Test case: Post Organization Depts Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:812 - *****************Test case: Post Organization update with Wrong id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:822 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1729 - *****************Test case: Post Orgs Histories with No Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/orgs/histories/, status=200, reason=OK}}
2017-51-24 18:51:50 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-51-24 18:51:50 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-51-24 18:51:50 [main] INFO  Org:1742 - *****************Test case: Post Orgs Histories with No Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2300 - *****************Test case: Post Orgs Shareholdings Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2318 - *****************Test case: Post Orgs Shareholdings Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1024 - *****************Test case: Delete Organization Brands with Wrong Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1031 - *****************Test case: Delete Organization Brands with Wrong Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1409 - *****************Test case: Delete Organization Contact Ways with Wrong id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1416 - *****************Test case: Delete Organization Contact Ways with Wrong id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1480 - *****************Test case: Delete Orgs Depts Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_dept (id, org_id, name, tel_no, created_by, updated_by, created_at, updated_at) VALUES(0,534, 'Test for Deleting', '', 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
2017-51-24 18:51:50 [main] INFO  Org:1504 - *****************Test case: Delete Orgs Depts Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1539 - *****************Test case: Delete Orgs Depts with Bad Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1546 - *****************Test case: Delete Orgs Depts with Bad Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1555 - *****************Test case: Delete Orgs Depts with No Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://am2-test.imd.com/api/orgs/depts/string, status=200, reason=OK}}
2017-51-24 18:51:50 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-51-24 18:51:50 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-51-24 18:51:50 [main] INFO  Org:1561 - *****************Test case: Delete Orgs Depts with No Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1525 - *****************Test case: Delete Orgs Depts with Not Existed Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1532 - *****************Test case:  Delete Orgs Depts with Not Existed  Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1511 - *****************Test case: Delete Orgs Depts with Wrong Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1518 - *****************Test case: Delete Orgs Depts with Wrong Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1749 - *****************Test case: Delete Orgs Histories Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1769 - *****************Test case: Delete Orgs Histories  Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1792 - *****************Test case: Delete Orgs Histories with Bad Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1800 - *****************Test case: Delete Orgs Histories with Bad Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1822 - *****************Test case: Delete Orgs Histories with No Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=DELETE, uri=http://am2-test.imd.com/api/orgs/histories/test, status=200, reason=OK}}
2017-51-24 18:51:50 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 401,
  "_msg" : "no access token, need to sign!"
}
2017-51-24 18:51:50 [main] INFO  APIResponse:72 - Checking if the body contains 401
2017-51-24 18:51:50 [main] INFO  Org:1828 - *****************Test case: Delete Orgs Histories with No Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1776 - *****************Test case: Delete Orgs Histories with Wrong Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1785 - *****************Test case: Delete Orgs Histories with Wrong Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2244 - *****************Test case: Delete Orgs Shareholders Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:INSERT INTO org_shareholder
(id, org_id, holder_id, hold_rate, invest_amount, invest_detail, created_by, updated_by, created_at, updated_at)
VALUES(0, 534, 534, 0, 0, ?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

2017-51-24 18:51:50 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '?, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)' at line 3
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_shareholder WHERE org_id=534 AND holder_id=534;
2017-51-24 18:51:50 [main] INFO  Org:2264 - *****************Test case: Post Orgs Shareholders Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2285 - *****************Test case: Delete Orgs Shareholders with Bad Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2293 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2271 - *****************Test case: Delete Orgs Shareholders with Wrong Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2278 - *****************Test case: Post Orgs Shareholders with Wrong Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1424 - *****************Test case: Get Orgs Depts List Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1450 - *****************Test case: Get Orgs Depts List Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1471 - *****************Test case: Get Orgs Depts List with Wrong text Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1473 - *****************Test case: Get Orgs Depts List with Wrong text Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:58 - *****************Test case: Get Orgs by id List Started*****************
2017-51-24 18:51:50 [main] INFO  Org:379 - *****************Test case: Get Orgs by id List Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:844 - *****************Test case: Post Organization Basic Started*****************
2017-51-24 18:51:50 [main] ERROR Org:852 - java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
2017-51-24 18:51:50 [main] INFO  Org:961 - *****************Test case: Post Organization Brands with No Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  Org:829 - *****************Test case: Post Organization Add with Empty Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:837 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:859 - *****************Test case: Post Organization Brands Started*****************
2017-51-24 18:51:50 [main] INFO  Org:885 - *****************Test case: Post Organization Brands Ended*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_brand WHERE org_id=534AND title="Testing for Automation";
2017-51-24 18:51:50 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'title="Testing for Automation"' at line 1
2017-51-24 18:51:50 [main] INFO  Org:945 - *****************Test case: Post Organization Brands with No Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE name="Testing for Automation";
2017-51-24 18:51:50 [main] INFO  DBCtrl:84 - java.sql.SQLSyntaxErrorException: Unknown column 'name' in 'where clause'
2017-51-24 18:51:50 [main] INFO  Org:955 - *****************Test case: Post Organization Brands with No Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:929 - *****************Test case: Post Organization Brands with Wrong Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:938 - *****************Test case: Post Organization Brands with Wrong Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1077 - *****************Test case: Post Organization Contact Ways Update Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=534 AND email="TestAutomation@test.com";
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM address WHERE location_id=0
2017-51-24 18:51:50 [main] INFO  Org:1114 - *****************Test case: Post Organization Contact Ways Update Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1122 - *****************Test case: Post Organization Contact Ways with no Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1139 - *****************Test case: Post Organization Contact Ways  with no Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1040 - *****************Test case: Post Organization Contact Ways Started*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM org_contact_way WHERE org_id=534 AND email="TestAutomation@test.com";
2017-51-24 18:51:50 [main] INFO  Org:1070 - *****************Test case: Post Organization Contact Ways Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1213 - *****************Test case: Post Organization Depts Modify Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1255 - *****************Test case: Post Organization Modify Name Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1262 - *****************Test case: Post Organization Depts Modify Name with Existed Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1304 - *****************Test case: Post Organization Modify Name with Existed Name Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1354 - *****************Test case: Post Organization Depts with Special Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1379 - *****************Test case: Post Organization Depts with Special Name Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1331 - *****************Test case: Post Organization Depts with No Org ID Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1345 - *****************Test case: Post Organization Depts with No Org ID Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1310 - *****************Test case: Post Organization Depts with No Existed Org Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1324 - *****************Test case: Post Organization No Existed Org Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1610 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1634 - *****************Test case: Post Orgs External Jobs with Wrong Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2171 - *****************Test case: Post Orgs List with Wrong Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2183 - *****************Test case: Post Orgs List with Wrong Name Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:796 - *****************Test case: Post Organization add Miss Element Started*****************
2017-51-24 18:51:50 [main] INFO  Org:805 - *****************Test case: Post Organization add Miss Element Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1568 - *****************Test case: Post Orgs External Jobs Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1603 - *****************Test case: Post Orgs External Jobs Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1641 - *****************Test case: Post Orgs Histories Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1660 - *****************Test case: Post Orgs Histories Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1708 - *****************Test case: Post Orgs Histories with bad Cookie Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1722 - *****************Test case: Post Orgs Histories with Bad Cookie Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1666 - *****************Test case: Post Orgs Histories with no Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1680 - *****************Test case: Post Orgs Histories with no Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1687 - *****************Test case: Post Orgs Histories with Wrong Org Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:1701 - *****************Test case: Post Orgs Histories with Wrong Org Id Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:1835 - *****************Test case: Post Orgs List Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2164 - *****************Test case: Post Orgs List Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2213 - *****************Test case: Post Orgs Shareholders with Name Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2237 - *****************Test case: Post Orgs Shareholders with Name Ended*****************
2017-51-24 18:51:50 [main] INFO  Org:2190 - *****************Test case: Post Orgs Shareholders with Id Started*****************
2017-51-24 18:51:50 [main] INFO  Org:2206 - *****************Test case: Post Orgs Shareholders with Id Ended*****************
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Test for Automation "
2017-51-24 18:51:50 [main] INFO  DBCtrl:73 - Executing the sql statement:DELETE FROM organization where name = "Parent for Automation "
2017-53-24 18:53:18 [main] INFO  Resume:205 - *****************Test suit: Resume*****************
2017-53-24 18:53:18 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-53-24 18:53:19 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-53-24 18:53:19 [main] INFO  APIResponse:38 - The response status is 200
2017-53-24 18:53:19 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 500,
  "_msg" : "密码错误"
}
2017-53-24 18:53:19 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-54-24 18:54:04 [main] INFO  Resume:199 - *****************Test suit: Resume*****************
2017-54-24 18:54:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-54-24 18:54:05 [main] INFO  Resume:60 - *****************Test case: Post Organization Brands Started*****************
2017-54-24 18:54:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=200, reason=OK}}
2017-54-24 18:54:05 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 400,
  "_msg" : "Unrecognized token 'addressDetail': was expecting ('true', 'false' or 'null')\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@3ca14a1b; line: 1, column: 15]"
}
2017-54-24 18:54:05 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-54-24 18:54:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-54-24 18:54:05 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-54-24 18:54:05 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-54-24 18:54:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-54-24 18:54:05 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-54-24 18:54:05 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-57-24 18:57:02 [main] INFO  Resume:199 - *****************Test suit: Resume*****************
2017-57-24 18:57:03 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-57-24 18:57:03 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-57-24 18:57:03 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-57-24 18:57:03 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-00-24 19:00:08 [main] INFO  Resume:201 - *****************Test suit: Resume*****************
2017-00-24 19:00:09 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-00-24 19:00:09 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-00-24 19:00:09 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-00-24 19:00:09 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-02-24 19:02:53 [main] INFO  Resume:201 - *****************Test suit: Resume*****************
2017-02-24 19:02:54 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-02-24 19:02:54 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-02-24 19:02:54 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-02-24 19:02:54 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-03-24 19:03:47 [main] INFO  Resume:201 - *****************Test suit: Resume*****************
2017-03-24 19:03:47 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-03-24 19:03:47 [main] INFO  Resume:60 - *****************Test case: Post Organization Brands Started*****************
2017-03-24 19:03:48 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=200, reason=OK}}
2017-03-24 19:03:48 [main] INFO  APIResponse:71 - The response body is:{
  "_body" : { },
  "_status" : 400,
  "_msg" : "Unrecognized token 'addressDetail': was expecting ('true', 'false' or 'null')\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@721db895; line: 1, column: 15]"
}
2017-03-24 19:03:48 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-03-24 19:03:48 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/resumeEducations, status=500, reason=Internal Server Error}}
2017-03-24 19:03:48 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/resumeEducations. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-03-24 19:03:48 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-03-24 19:03:48 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/basic, status=500, reason=Internal Server Error}}
2017-03-24 19:03:48 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/basic. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-03-24 19:03:48 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-04-24 19:04:05 [main] INFO  Resume:201 - *****************Test suit: Resume*****************
2017-04-24 19:04:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-04-24 19:04:05 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/resumeEducations, status=500, reason=Internal Server Error}}
2017-04-24 19:04:05 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/resumeEducations. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-04-24 19:04:05 [main] INFO  APIResponse:72 - Checking if the body contains 200
2017-09-24 19:09:42 [main] INFO  Resume:201 - *****************Test suit: Resume*****************
2017-09-24 19:09:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/xauth, status=200, reason=OK}}
2017-09-24 19:09:42 [main] INFO  APIRequest:267 - InboundJaxrsResponse{context=ClientResponse{method=POST, uri=http://am2-test.imd.com/api/resumes/resumeEducations, status=500, reason=Internal Server Error}}
2017-09-24 19:09:42 [main] INFO  APIResponse:71 - The response body is:<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>
<title>Error 500 </title>
</head>
<body>
<h2>HTTP ERROR: 500</h2>
<p>Problem accessing /resumes/resumeEducations. Reason:
<pre>    Internal Server Error</pre></p>
<hr /><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.3.9.v20160517</a><hr/>
</body>
</html>

2017-09-24 19:09:42 [main] INFO  APIResponse:72 - Checking if the body contains 200
