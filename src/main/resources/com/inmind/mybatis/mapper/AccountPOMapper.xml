<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inmind.mybatis.mapper.AccountPOMapper">
  <resultMap id="BaseResultMap" type="com.inmind.mybatis.entity.AccountPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="chinese_name" jdbcType="VARCHAR" property="chineseName" />
    <result column="english_name" jdbcType="VARCHAR" property="englishName" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="team_id" jdbcType="BIGINT" property="teamId" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="working_phone" jdbcType="VARCHAR" property="workingPhone" />
    <result column="working_email" jdbcType="VARCHAR" property="workingEmail" />
    <result column="working_years" jdbcType="INTEGER" property="workingYears" />
    <result column="hired_at" jdbcType="TIMESTAMP" property="hiredAt" />
    <result column="is_freeze" jdbcType="INTEGER" property="isFreeze" />
    <result column="password_reset" jdbcType="INTEGER" property="passwordReset" />
    <result column="reset_password_at" jdbcType="TIMESTAMP" property="resetPasswordAt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="latest_login_at" jdbcType="TIMESTAMP" property="latestLoginAt" />
    <result column="latest_login_ip" jdbcType="VARCHAR" property="latestLoginIp" />
    <result column="login_fail_times" jdbcType="INTEGER" property="loginFailTimes" />
    <result column="avaya_seat_no" jdbcType="VARCHAR" property="avayaSeatNo" />
    <result column="avaya_seat_group" jdbcType="VARCHAR" property="avayaSeatGroup" />
    <result column="avaya_ext" jdbcType="VARCHAR" property="avayaExt" />
    <result column="avaya_pwd" jdbcType="VARCHAR" property="avayaPwd" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="industry_codes" jdbcType="VARCHAR" property="industryCodes" />
    <result column="function_codes" jdbcType="VARCHAR" property="functionCodes" />
    <result column="location_ids" jdbcType="VARCHAR" property="locationIds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, chinese_name, english_name, nickname, email, mobile, company_id, 
    team_id, gender, working_phone, working_email, working_years, hired_at, is_freeze, 
    password_reset, reset_password_at, status, latest_login_at, latest_login_ip, login_fail_times, 
    avaya_seat_no, avaya_seat_group, avaya_ext, avaya_pwd, created_by, updated_by, created_at, 
    updated_at, industry_codes, function_codes, location_ids
  </sql>
  <select id="selectByExample" parameterType="com.inmind.mybatis.entity.AccountPOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.inmind.mybatis.entity.AccountPOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.inmind.mybatis.entity.AccountPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="chineseName != null">
        chinese_name,
      </if>
      <if test="englishName != null">
        english_name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="workingPhone != null">
        working_phone,
      </if>
      <if test="workingEmail != null">
        working_email,
      </if>
      <if test="workingYears != null">
        working_years,
      </if>
      <if test="hiredAt != null">
        hired_at,
      </if>
      <if test="isFreeze != null">
        is_freeze,
      </if>
      <if test="passwordReset != null">
        password_reset,
      </if>
      <if test="resetPasswordAt != null">
        reset_password_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="latestLoginAt != null">
        latest_login_at,
      </if>
      <if test="latestLoginIp != null">
        latest_login_ip,
      </if>
      <if test="loginFailTimes != null">
        login_fail_times,
      </if>
      <if test="avayaSeatNo != null">
        avaya_seat_no,
      </if>
      <if test="avayaSeatGroup != null">
        avaya_seat_group,
      </if>
      <if test="avayaExt != null">
        avaya_ext,
      </if>
      <if test="avayaPwd != null">
        avaya_pwd,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="industryCodes != null">
        industry_codes,
      </if>
      <if test="functionCodes != null">
        function_codes,
      </if>
      <if test="locationIds != null">
        location_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="chineseName != null">
        #{chineseName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null">
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=BIGINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="workingPhone != null">
        #{workingPhone,jdbcType=VARCHAR},
      </if>
      <if test="workingEmail != null">
        #{workingEmail,jdbcType=VARCHAR},
      </if>
      <if test="workingYears != null">
        #{workingYears,jdbcType=INTEGER},
      </if>
      <if test="hiredAt != null">
        #{hiredAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isFreeze != null">
        #{isFreeze,jdbcType=INTEGER},
      </if>
      <if test="passwordReset != null">
        #{passwordReset,jdbcType=INTEGER},
      </if>
      <if test="resetPasswordAt != null">
        #{resetPasswordAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="latestLoginAt != null">
        #{latestLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="latestLoginIp != null">
        #{latestLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginFailTimes != null">
        #{loginFailTimes,jdbcType=INTEGER},
      </if>
      <if test="avayaSeatNo != null">
        #{avayaSeatNo,jdbcType=VARCHAR},
      </if>
      <if test="avayaSeatGroup != null">
        #{avayaSeatGroup,jdbcType=VARCHAR},
      </if>
      <if test="avayaExt != null">
        #{avayaExt,jdbcType=VARCHAR},
      </if>
      <if test="avayaPwd != null">
        #{avayaPwd,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="industryCodes != null">
        #{industryCodes,jdbcType=VARCHAR},
      </if>
      <if test="functionCodes != null">
        #{functionCodes,jdbcType=VARCHAR},
      </if>
      <if test="locationIds != null">
        #{locationIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inmind.mybatis.entity.AccountPOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.chineseName != null">
        chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      </if>
      <if test="record.englishName != null">
        english_name = #{record.englishName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=BIGINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.workingPhone != null">
        working_phone = #{record.workingPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.workingEmail != null">
        working_email = #{record.workingEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.workingYears != null">
        working_years = #{record.workingYears,jdbcType=INTEGER},
      </if>
      <if test="record.hiredAt != null">
        hired_at = #{record.hiredAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isFreeze != null">
        is_freeze = #{record.isFreeze,jdbcType=INTEGER},
      </if>
      <if test="record.passwordReset != null">
        password_reset = #{record.passwordReset,jdbcType=INTEGER},
      </if>
      <if test="record.resetPasswordAt != null">
        reset_password_at = #{record.resetPasswordAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.latestLoginAt != null">
        latest_login_at = #{record.latestLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.latestLoginIp != null">
        latest_login_ip = #{record.latestLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginFailTimes != null">
        login_fail_times = #{record.loginFailTimes,jdbcType=INTEGER},
      </if>
      <if test="record.avayaSeatNo != null">
        avaya_seat_no = #{record.avayaSeatNo,jdbcType=VARCHAR},
      </if>
      <if test="record.avayaSeatGroup != null">
        avaya_seat_group = #{record.avayaSeatGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.avayaExt != null">
        avaya_ext = #{record.avayaExt,jdbcType=VARCHAR},
      </if>
      <if test="record.avayaPwd != null">
        avaya_pwd = #{record.avayaPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.industryCodes != null">
        industry_codes = #{record.industryCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.functionCodes != null">
        function_codes = #{record.functionCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.locationIds != null">
        location_ids = #{record.locationIds,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      english_name = #{record.englishName,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=BIGINT},
      team_id = #{record.teamId,jdbcType=BIGINT},
      gender = #{record.gender,jdbcType=INTEGER},
      working_phone = #{record.workingPhone,jdbcType=VARCHAR},
      working_email = #{record.workingEmail,jdbcType=VARCHAR},
      working_years = #{record.workingYears,jdbcType=INTEGER},
      hired_at = #{record.hiredAt,jdbcType=TIMESTAMP},
      is_freeze = #{record.isFreeze,jdbcType=INTEGER},
      password_reset = #{record.passwordReset,jdbcType=INTEGER},
      reset_password_at = #{record.resetPasswordAt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      latest_login_at = #{record.latestLoginAt,jdbcType=TIMESTAMP},
      latest_login_ip = #{record.latestLoginIp,jdbcType=VARCHAR},
      login_fail_times = #{record.loginFailTimes,jdbcType=INTEGER},
      avaya_seat_no = #{record.avayaSeatNo,jdbcType=VARCHAR},
      avaya_seat_group = #{record.avayaSeatGroup,jdbcType=VARCHAR},
      avaya_ext = #{record.avayaExt,jdbcType=VARCHAR},
      avaya_pwd = #{record.avayaPwd,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      industry_codes = #{record.industryCodes,jdbcType=VARCHAR},
      function_codes = #{record.functionCodes,jdbcType=VARCHAR},
      location_ids = #{record.locationIds,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.inmind.mybatis.entity.AccountPOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>