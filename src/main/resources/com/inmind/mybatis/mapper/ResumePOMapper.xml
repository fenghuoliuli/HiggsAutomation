<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inmind.mybatis.mapper.ResumePOMapper">
  <resultMap id="BaseResultMap" type="com.inmind.mybatis.entity.ResumePO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="people_id" jdbcType="BIGINT" property="peopleId" />
    <result column="copy_name" jdbcType="VARCHAR" property="copyName" />
    <result column="copy_reason" jdbcType="VARCHAR" property="copyReason" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="chinese_name" jdbcType="VARCHAR" property="chineseName" />
    <result column="english_name" jdbcType="VARCHAR" property="englishName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="work_tel" jdbcType="VARCHAR" property="workTel" />
    <result column="other_tel" jdbcType="VARCHAR" property="otherTel" />
    <result column="private_email" jdbcType="VARCHAR" property="privateEmail" />
    <result column="work_email" jdbcType="VARCHAR" property="workEmail" />
    <result column="other_email" jdbcType="VARCHAR" property="otherEmail" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="marital_status" jdbcType="INTEGER" property="maritalStatus" />
    <result column="register_location_id" jdbcType="BIGINT" property="registerLocationId" />
    <result column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="started_work_at" jdbcType="TIMESTAMP" property="startedWorkAt" />
    <result column="wechat_no" jdbcType="VARCHAR" property="wechatNo" />
    <result column="qq_no" jdbcType="VARCHAR" property="qqNo" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="linkedin_url" jdbcType="VARCHAR" property="linkedinUrl" />
    <result column="home_page" jdbcType="VARCHAR" property="homePage" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="job_search_status" jdbcType="INTEGER" property="jobSearchStatus" />
    <result column="expect_org_ids" jdbcType="VARCHAR" property="expectOrgIds" />
    <result column="expect_location_ids" jdbcType="VARCHAR" property="expectLocationIds" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="work_phone" jdbcType="VARCHAR" property="workPhone" />
    <result column="candidate_integrity" jdbcType="DECIMAL" property="candidateIntegrity" />
    <result column="contact_integrity" jdbcType="DECIMAL" property="contactIntegrity" />
    <result column="hidden" jdbcType="INTEGER" property="hidden" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="resume_experience_id" jdbcType="BIGINT" property="resumeExperienceId" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="native_location_id" jdbcType="BIGINT" property="nativeLocationId" />
    <result column="nationality_location_id" jdbcType="BIGINT" property="nationalityLocationId" />
    <result column="current_location_id" jdbcType="BIGINT" property="currentLocationId" />
    <result column="address_detail" jdbcType="VARCHAR" property="addressDetail" />
    <result column="annual_salary" jdbcType="DECIMAL" property="annualSalary" />
    <result column="candidate_no" jdbcType="VARCHAR" property="candidateNo" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="dimission_period" jdbcType="VARCHAR" property="dimissionPeriod" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="industry" jdbcType="INTEGER" property="industry" />
    <result column="contact_type" jdbcType="INTEGER" property="contactType" />
    <result column="recruit_location_ids" jdbcType="VARCHAR" property="recruitLocationIds" />
    <result column="recruit_functions" jdbcType="VARCHAR" property="recruitFunctions" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.inmind.mybatis.entity.ResumePOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="introduce" jdbcType="LONGVARCHAR" property="introduce" />
    <result column="expect_salary" jdbcType="LONGVARCHAR" property="expectSalary" />
    <result column="tech_capacity" jdbcType="LONGVARCHAR" property="techCapacity" />
    <result column="salary_detail" jdbcType="LONGVARCHAR" property="salaryDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, people_id, copy_name, copy_reason, avatar, chinese_name, english_name, 
    gender, mobile, work_tel, other_tel, private_email, work_email, other_email, birthday, 
    marital_status, register_location_id, address_id, started_work_at, wechat_no, qq_no, 
    weibo, linkedin_url, home_page, source, job_search_status, expect_org_ids, expect_location_ids, 
    type, owner_id, created_by, updated_by, created_at, updated_at, status, work_phone, 
    candidate_integrity, contact_integrity, hidden, published_at, resume_experience_id, 
    degree, native_location_id, nationality_location_id, current_location_id, address_detail, 
    annual_salary, candidate_no, evaluate, dimission_period, org_name, position, industry, 
    contact_type, recruit_location_ids, recruit_functions, org_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    introduce, expect_salary, tech_capacity, salary_detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.inmind.mybatis.entity.ResumePOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.inmind.mybatis.entity.ResumePOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.inmind.mybatis.entity.ResumePOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.inmind.mybatis.entity.ResumePOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="peopleId != null">
        people_id,
      </if>
      <if test="copyName != null">
        copy_name,
      </if>
      <if test="copyReason != null">
        copy_reason,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="chineseName != null">
        chinese_name,
      </if>
      <if test="englishName != null">
        english_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="workTel != null">
        work_tel,
      </if>
      <if test="otherTel != null">
        other_tel,
      </if>
      <if test="privateEmail != null">
        private_email,
      </if>
      <if test="workEmail != null">
        work_email,
      </if>
      <if test="otherEmail != null">
        other_email,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="registerLocationId != null">
        register_location_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="startedWorkAt != null">
        started_work_at,
      </if>
      <if test="wechatNo != null">
        wechat_no,
      </if>
      <if test="qqNo != null">
        qq_no,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="linkedinUrl != null">
        linkedin_url,
      </if>
      <if test="homePage != null">
        home_page,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="jobSearchStatus != null">
        job_search_status,
      </if>
      <if test="expectOrgIds != null">
        expect_org_ids,
      </if>
      <if test="expectLocationIds != null">
        expect_location_ids,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="workPhone != null">
        work_phone,
      </if>
      <if test="candidateIntegrity != null">
        candidate_integrity,
      </if>
      <if test="contactIntegrity != null">
        contact_integrity,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="publishedAt != null">
        published_at,
      </if>
      <if test="resumeExperienceId != null">
        resume_experience_id,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="nativeLocationId != null">
        native_location_id,
      </if>
      <if test="nationalityLocationId != null">
        nationality_location_id,
      </if>
      <if test="currentLocationId != null">
        current_location_id,
      </if>
      <if test="addressDetail != null">
        address_detail,
      </if>
      <if test="annualSalary != null">
        annual_salary,
      </if>
      <if test="candidateNo != null">
        candidate_no,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="dimissionPeriod != null">
        dimission_period,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="contactType != null">
        contact_type,
      </if>
      <if test="recruitLocationIds != null">
        recruit_location_ids,
      </if>
      <if test="recruitFunctions != null">
        recruit_functions,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="expectSalary != null">
        expect_salary,
      </if>
      <if test="techCapacity != null">
        tech_capacity,
      </if>
      <if test="salaryDetail != null">
        salary_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="peopleId != null">
        #{peopleId,jdbcType=BIGINT},
      </if>
      <if test="copyName != null">
        #{copyName,jdbcType=VARCHAR},
      </if>
      <if test="copyReason != null">
        #{copyReason,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="chineseName != null">
        #{chineseName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null">
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="workTel != null">
        #{workTel,jdbcType=VARCHAR},
      </if>
      <if test="otherTel != null">
        #{otherTel,jdbcType=VARCHAR},
      </if>
      <if test="privateEmail != null">
        #{privateEmail,jdbcType=VARCHAR},
      </if>
      <if test="workEmail != null">
        #{workEmail,jdbcType=VARCHAR},
      </if>
      <if test="otherEmail != null">
        #{otherEmail,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="registerLocationId != null">
        #{registerLocationId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="startedWorkAt != null">
        #{startedWorkAt,jdbcType=TIMESTAMP},
      </if>
      <if test="wechatNo != null">
        #{wechatNo,jdbcType=VARCHAR},
      </if>
      <if test="qqNo != null">
        #{qqNo,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="linkedinUrl != null">
        #{linkedinUrl,jdbcType=VARCHAR},
      </if>
      <if test="homePage != null">
        #{homePage,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="jobSearchStatus != null">
        #{jobSearchStatus,jdbcType=INTEGER},
      </if>
      <if test="expectOrgIds != null">
        #{expectOrgIds,jdbcType=VARCHAR},
      </if>
      <if test="expectLocationIds != null">
        #{expectLocationIds,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="workPhone != null">
        #{workPhone,jdbcType=VARCHAR},
      </if>
      <if test="candidateIntegrity != null">
        #{candidateIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="contactIntegrity != null">
        #{contactIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=INTEGER},
      </if>
      <if test="publishedAt != null">
        #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="resumeExperienceId != null">
        #{resumeExperienceId,jdbcType=BIGINT},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="nativeLocationId != null">
        #{nativeLocationId,jdbcType=BIGINT},
      </if>
      <if test="nationalityLocationId != null">
        #{nationalityLocationId,jdbcType=BIGINT},
      </if>
      <if test="currentLocationId != null">
        #{currentLocationId,jdbcType=BIGINT},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="annualSalary != null">
        #{annualSalary,jdbcType=DECIMAL},
      </if>
      <if test="candidateNo != null">
        #{candidateNo,jdbcType=VARCHAR},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="dimissionPeriod != null">
        #{dimissionPeriod,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=INTEGER},
      </if>
      <if test="contactType != null">
        #{contactType,jdbcType=INTEGER},
      </if>
      <if test="recruitLocationIds != null">
        #{recruitLocationIds,jdbcType=VARCHAR},
      </if>
      <if test="recruitFunctions != null">
        #{recruitFunctions,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="expectSalary != null">
        #{expectSalary,jdbcType=LONGVARCHAR},
      </if>
      <if test="techCapacity != null">
        #{techCapacity,jdbcType=LONGVARCHAR},
      </if>
      <if test="salaryDetail != null">
        #{salaryDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inmind.mybatis.entity.ResumePOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update resume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.peopleId != null">
        people_id = #{record.peopleId,jdbcType=BIGINT},
      </if>
      <if test="record.copyName != null">
        copy_name = #{record.copyName,jdbcType=VARCHAR},
      </if>
      <if test="record.copyReason != null">
        copy_reason = #{record.copyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.chineseName != null">
        chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      </if>
      <if test="record.englishName != null">
        english_name = #{record.englishName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.workTel != null">
        work_tel = #{record.workTel,jdbcType=VARCHAR},
      </if>
      <if test="record.otherTel != null">
        other_tel = #{record.otherTel,jdbcType=VARCHAR},
      </if>
      <if test="record.privateEmail != null">
        private_email = #{record.privateEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.workEmail != null">
        work_email = #{record.workEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.otherEmail != null">
        other_email = #{record.otherEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.registerLocationId != null">
        register_location_id = #{record.registerLocationId,jdbcType=BIGINT},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=BIGINT},
      </if>
      <if test="record.startedWorkAt != null">
        started_work_at = #{record.startedWorkAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.wechatNo != null">
        wechat_no = #{record.wechatNo,jdbcType=VARCHAR},
      </if>
      <if test="record.qqNo != null">
        qq_no = #{record.qqNo,jdbcType=VARCHAR},
      </if>
      <if test="record.weibo != null">
        weibo = #{record.weibo,jdbcType=VARCHAR},
      </if>
      <if test="record.linkedinUrl != null">
        linkedin_url = #{record.linkedinUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.homePage != null">
        home_page = #{record.homePage,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.jobSearchStatus != null">
        job_search_status = #{record.jobSearchStatus,jdbcType=INTEGER},
      </if>
      <if test="record.expectOrgIds != null">
        expect_org_ids = #{record.expectOrgIds,jdbcType=VARCHAR},
      </if>
      <if test="record.expectLocationIds != null">
        expect_location_ids = #{record.expectLocationIds,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=BIGINT},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.workPhone != null">
        work_phone = #{record.workPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.candidateIntegrity != null">
        candidate_integrity = #{record.candidateIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="record.contactIntegrity != null">
        contact_integrity = #{record.contactIntegrity,jdbcType=DECIMAL},
      </if>
      <if test="record.hidden != null">
        hidden = #{record.hidden,jdbcType=INTEGER},
      </if>
      <if test="record.publishedAt != null">
        published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resumeExperienceId != null">
        resume_experience_id = #{record.resumeExperienceId,jdbcType=BIGINT},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=INTEGER},
      </if>
      <if test="record.nativeLocationId != null">
        native_location_id = #{record.nativeLocationId,jdbcType=BIGINT},
      </if>
      <if test="record.nationalityLocationId != null">
        nationality_location_id = #{record.nationalityLocationId,jdbcType=BIGINT},
      </if>
      <if test="record.currentLocationId != null">
        current_location_id = #{record.currentLocationId,jdbcType=BIGINT},
      </if>
      <if test="record.addressDetail != null">
        address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.annualSalary != null">
        annual_salary = #{record.annualSalary,jdbcType=DECIMAL},
      </if>
      <if test="record.candidateNo != null">
        candidate_no = #{record.candidateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluate != null">
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
      </if>
      <if test="record.dimissionPeriod != null">
        dimission_period = #{record.dimissionPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.industry != null">
        industry = #{record.industry,jdbcType=INTEGER},
      </if>
      <if test="record.contactType != null">
        contact_type = #{record.contactType,jdbcType=INTEGER},
      </if>
      <if test="record.recruitLocationIds != null">
        recruit_location_ids = #{record.recruitLocationIds,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitFunctions != null">
        recruit_functions = #{record.recruitFunctions,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.expectSalary != null">
        expect_salary = #{record.expectSalary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.techCapacity != null">
        tech_capacity = #{record.techCapacity,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.salaryDetail != null">
        salary_detail = #{record.salaryDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update resume
    set id = #{record.id,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      people_id = #{record.peopleId,jdbcType=BIGINT},
      copy_name = #{record.copyName,jdbcType=VARCHAR},
      copy_reason = #{record.copyReason,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      english_name = #{record.englishName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      work_tel = #{record.workTel,jdbcType=VARCHAR},
      other_tel = #{record.otherTel,jdbcType=VARCHAR},
      private_email = #{record.privateEmail,jdbcType=VARCHAR},
      work_email = #{record.workEmail,jdbcType=VARCHAR},
      other_email = #{record.otherEmail,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      register_location_id = #{record.registerLocationId,jdbcType=BIGINT},
      address_id = #{record.addressId,jdbcType=BIGINT},
      started_work_at = #{record.startedWorkAt,jdbcType=TIMESTAMP},
      wechat_no = #{record.wechatNo,jdbcType=VARCHAR},
      qq_no = #{record.qqNo,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      linkedin_url = #{record.linkedinUrl,jdbcType=VARCHAR},
      home_page = #{record.homePage,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      job_search_status = #{record.jobSearchStatus,jdbcType=INTEGER},
      expect_org_ids = #{record.expectOrgIds,jdbcType=VARCHAR},
      expect_location_ids = #{record.expectLocationIds,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      owner_id = #{record.ownerId,jdbcType=BIGINT},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      work_phone = #{record.workPhone,jdbcType=VARCHAR},
      candidate_integrity = #{record.candidateIntegrity,jdbcType=DECIMAL},
      contact_integrity = #{record.contactIntegrity,jdbcType=DECIMAL},
      hidden = #{record.hidden,jdbcType=INTEGER},
      published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      resume_experience_id = #{record.resumeExperienceId,jdbcType=BIGINT},
      degree = #{record.degree,jdbcType=INTEGER},
      native_location_id = #{record.nativeLocationId,jdbcType=BIGINT},
      nationality_location_id = #{record.nationalityLocationId,jdbcType=BIGINT},
      current_location_id = #{record.currentLocationId,jdbcType=BIGINT},
      address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      annual_salary = #{record.annualSalary,jdbcType=DECIMAL},
      candidate_no = #{record.candidateNo,jdbcType=VARCHAR},
      evaluate = #{record.evaluate,jdbcType=VARCHAR},
      dimission_period = #{record.dimissionPeriod,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=INTEGER},
      contact_type = #{record.contactType,jdbcType=INTEGER},
      recruit_location_ids = #{record.recruitLocationIds,jdbcType=VARCHAR},
      recruit_functions = #{record.recruitFunctions,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=BIGINT},
      introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      expect_salary = #{record.expectSalary,jdbcType=LONGVARCHAR},
      tech_capacity = #{record.techCapacity,jdbcType=LONGVARCHAR},
      salary_detail = #{record.salaryDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update resume
    set id = #{record.id,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      people_id = #{record.peopleId,jdbcType=BIGINT},
      copy_name = #{record.copyName,jdbcType=VARCHAR},
      copy_reason = #{record.copyReason,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      english_name = #{record.englishName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      work_tel = #{record.workTel,jdbcType=VARCHAR},
      other_tel = #{record.otherTel,jdbcType=VARCHAR},
      private_email = #{record.privateEmail,jdbcType=VARCHAR},
      work_email = #{record.workEmail,jdbcType=VARCHAR},
      other_email = #{record.otherEmail,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      register_location_id = #{record.registerLocationId,jdbcType=BIGINT},
      address_id = #{record.addressId,jdbcType=BIGINT},
      started_work_at = #{record.startedWorkAt,jdbcType=TIMESTAMP},
      wechat_no = #{record.wechatNo,jdbcType=VARCHAR},
      qq_no = #{record.qqNo,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      linkedin_url = #{record.linkedinUrl,jdbcType=VARCHAR},
      home_page = #{record.homePage,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      job_search_status = #{record.jobSearchStatus,jdbcType=INTEGER},
      expect_org_ids = #{record.expectOrgIds,jdbcType=VARCHAR},
      expect_location_ids = #{record.expectLocationIds,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      owner_id = #{record.ownerId,jdbcType=BIGINT},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      work_phone = #{record.workPhone,jdbcType=VARCHAR},
      candidate_integrity = #{record.candidateIntegrity,jdbcType=DECIMAL},
      contact_integrity = #{record.contactIntegrity,jdbcType=DECIMAL},
      hidden = #{record.hidden,jdbcType=INTEGER},
      published_at = #{record.publishedAt,jdbcType=TIMESTAMP},
      resume_experience_id = #{record.resumeExperienceId,jdbcType=BIGINT},
      degree = #{record.degree,jdbcType=INTEGER},
      native_location_id = #{record.nativeLocationId,jdbcType=BIGINT},
      nationality_location_id = #{record.nationalityLocationId,jdbcType=BIGINT},
      current_location_id = #{record.currentLocationId,jdbcType=BIGINT},
      address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      annual_salary = #{record.annualSalary,jdbcType=DECIMAL},
      candidate_no = #{record.candidateNo,jdbcType=VARCHAR},
      evaluate = #{record.evaluate,jdbcType=VARCHAR},
      dimission_period = #{record.dimissionPeriod,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=INTEGER},
      contact_type = #{record.contactType,jdbcType=INTEGER},
      recruit_location_ids = #{record.recruitLocationIds,jdbcType=VARCHAR},
      recruit_functions = #{record.recruitFunctions,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.inmind.mybatis.entity.ResumePOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.inmind.mybatis.entity.ResumePOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>